
 /----------------------------------------------------------------------------\
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |  Copyright (C) 2012 - 2024  Claire Xenia Wolf <claire@yosyshq.com>         |
 |  Distributed under an ISC-like license, type "license" to see terms        |
 \----------------------------------------------------------------------------/
 Yosys 0.42+15 (git sha1 74a1dd99a, clang++ 10.0.0-4ubuntu1 -fPIC -Os)

-- Executing script file `pong_pt1_wrapper.ys' --

1. Executing Verilog-2005 frontend: ../../../pong_pt1_wrapper.v
Parsing Verilog input from `../../../pong_pt1_wrapper.v' to AST representation.
Generating RTLIL representation for module `\pong_pt1_wrapper'.
Warning: Replacing memory \vectOut with list of registers. See ../../../pong_pt1_wrapper.v:60
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: ../../../../source/pong_pt1.v
Parsing SystemVerilog input from `../../../../source/pong_pt1.v' to AST representation.
Generating RTLIL representation for module `\pong_pt1'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: ../../../../source/pixel_gen.v
Parsing SystemVerilog input from `../../../../source/pixel_gen.v' to AST representation.
Generating RTLIL representation for module `\pixel_gen'.
Successfully finished Verilog frontend.

4. Executing HIERARCHY pass (managing design hierarchy).

4.1. Analyzing design hierarchy..
Top module:  \pong_pt1_wrapper
Used module:     \pong_pt1
Used module:         \pixel_gen
Parameter \TABLE_WIDTH = 128
Parameter \TABLE_HEIGHT = 64
Parameter \WALL_THICKNESS = 8
Parameter \PADDLE_HEIGHT = 16
Parameter \PADDLE_VELOCITY = 1
Parameter \BALL_VELOCITY_POS = 1
Parameter \BALL_VELOCITY_NEG = 32'11111111111111111111111111111111
Parameter \X_BIT_WIDTH = 9
Parameter \Y_BIT_WIDTH = 8

4.2. Executing AST frontend in derive mode using pre-parsed AST for module `\pixel_gen'.
Parameter \TABLE_WIDTH = 128
Parameter \TABLE_HEIGHT = 64
Parameter \WALL_THICKNESS = 8
Parameter \PADDLE_HEIGHT = 16
Parameter \PADDLE_VELOCITY = 1
Parameter \BALL_VELOCITY_POS = 1
Parameter \BALL_VELOCITY_NEG = 32'11111111111111111111111111111111
Parameter \X_BIT_WIDTH = 9
Parameter \Y_BIT_WIDTH = 8
Generating RTLIL representation for module `$paramod$d8802eb12a6a84ebef2be634f594ec2cf86160e1\pixel_gen'.

4.3. Analyzing design hierarchy..
Top module:  \pong_pt1_wrapper
Used module:     \pong_pt1
Used module:         $paramod$d8802eb12a6a84ebef2be634f594ec2cf86160e1\pixel_gen

4.4. Analyzing design hierarchy..
Top module:  \pong_pt1_wrapper
Used module:     \pong_pt1
Used module:         $paramod$d8802eb12a6a84ebef2be634f594ec2cf86160e1\pixel_gen
Removing unused module `\pixel_gen'.
Removed 1 unused modules.

5. Executing SYNTH_GOWIN pass.

5.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/gowin/cells_sim.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/gowin/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\LUT1'.
Generating RTLIL representation for module `\LUT2'.
Generating RTLIL representation for module `\LUT3'.
Generating RTLIL representation for module `\LUT4'.
Generating RTLIL representation for module `\__APICULA_LUT5'.
Generating RTLIL representation for module `\__APICULA_LUT6'.
Generating RTLIL representation for module `\__APICULA_LUT7'.
Generating RTLIL representation for module `\__APICULA_LUT8'.
Generating RTLIL representation for module `\MUX2'.
Generating RTLIL representation for module `\MUX2_LUT5'.
Generating RTLIL representation for module `\MUX2_LUT6'.
Generating RTLIL representation for module `\MUX2_LUT7'.
Generating RTLIL representation for module `\MUX2_LUT8'.
Generating RTLIL representation for module `\DFF'.
Generating RTLIL representation for module `\DFFE'.
Generating RTLIL representation for module `\DFFS'.
Generating RTLIL representation for module `\DFFSE'.
Generating RTLIL representation for module `\DFFR'.
Generating RTLIL representation for module `\DFFRE'.
Generating RTLIL representation for module `\DFFP'.
Generating RTLIL representation for module `\DFFPE'.
Generating RTLIL representation for module `\DFFC'.
Generating RTLIL representation for module `\DFFCE'.
Generating RTLIL representation for module `\DFFN'.
Generating RTLIL representation for module `\DFFNE'.
Generating RTLIL representation for module `\DFFNS'.
Generating RTLIL representation for module `\DFFNSE'.
Generating RTLIL representation for module `\DFFNR'.
Generating RTLIL representation for module `\DFFNRE'.
Generating RTLIL representation for module `\DFFNP'.
Generating RTLIL representation for module `\DFFNPE'.
Generating RTLIL representation for module `\DFFNC'.
Generating RTLIL representation for module `\DFFNCE'.
Generating RTLIL representation for module `\VCC'.
Generating RTLIL representation for module `\GND'.
Generating RTLIL representation for module `\IBUF'.
Generating RTLIL representation for module `\OBUF'.
Generating RTLIL representation for module `\TBUF'.
Generating RTLIL representation for module `\IOBUF'.
Generating RTLIL representation for module `\ELVDS_OBUF'.
Generating RTLIL representation for module `\TLVDS_OBUF'.
Generating RTLIL representation for module `\OSER4'.
Generating RTLIL representation for module `\OSER8'.
Generating RTLIL representation for module `\OSER10'.
Generating RTLIL representation for module `\OVIDEO'.
Generating RTLIL representation for module `\OSER16'.
Generating RTLIL representation for module `\IDES4'.
Generating RTLIL representation for module `\IDES8'.
Generating RTLIL representation for module `\IDES10'.
Generating RTLIL representation for module `\IVIDEO'.
Generating RTLIL representation for module `\IDES16'.
Generating RTLIL representation for module `\IDDR'.
Generating RTLIL representation for module `\IDDRC'.
Generating RTLIL representation for module `\ODDR'.
Generating RTLIL representation for module `\ODDRC'.
Generating RTLIL representation for module `\GSR'.
Generating RTLIL representation for module `\ALU'.
Generating RTLIL representation for module `\RAM16S1'.
Generating RTLIL representation for module `\RAM16S2'.
Generating RTLIL representation for module `\RAM16S4'.
Generating RTLIL representation for module `\RAM16SDP1'.
Generating RTLIL representation for module `\RAM16SDP2'.
Generating RTLIL representation for module `\RAM16SDP4'.
Generating RTLIL representation for module `\SP'.
Generating RTLIL representation for module `\SPX9'.
Generating RTLIL representation for module `\SDP'.
Generating RTLIL representation for module `\SDPX9'.
Generating RTLIL representation for module `\DP'.
Generating RTLIL representation for module `\DPX9'.
Generating RTLIL representation for module `\rPLL'.
Generating RTLIL representation for module `\PLLVR'.
Generating RTLIL representation for module `\OSC'.
Generating RTLIL representation for module `\OSCZ'.
Generating RTLIL representation for module `\OSCF'.
Generating RTLIL representation for module `\OSCH'.
Generating RTLIL representation for module `\OSCW'.
Generating RTLIL representation for module `\OSCO'.
Successfully finished Verilog frontend.

5.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/gowin/cells_xtra.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/gowin/cells_xtra.v' to AST representation.
Generating RTLIL representation for module `\MUX2_MUX8'.
Generating RTLIL representation for module `\MUX2_MUX16'.
Generating RTLIL representation for module `\MUX2_MUX32'.
Generating RTLIL representation for module `\MUX4'.
Generating RTLIL representation for module `\MUX8'.
Generating RTLIL representation for module `\MUX16'.
Generating RTLIL representation for module `\MUX32'.
Generating RTLIL representation for module `\LUT5'.
Generating RTLIL representation for module `\LUT6'.
Generating RTLIL representation for module `\LUT7'.
Generating RTLIL representation for module `\LUT8'.
Generating RTLIL representation for module `\DL'.
Generating RTLIL representation for module `\DLE'.
Generating RTLIL representation for module `\DLC'.
Generating RTLIL representation for module `\DLCE'.
Generating RTLIL representation for module `\DLP'.
Generating RTLIL representation for module `\DLPE'.
Generating RTLIL representation for module `\DLN'.
Generating RTLIL representation for module `\DLNE'.
Generating RTLIL representation for module `\DLNC'.
Generating RTLIL representation for module `\DLNCE'.
Generating RTLIL representation for module `\DLNP'.
Generating RTLIL representation for module `\DLNPE'.
Generating RTLIL representation for module `\INV'.
Generating RTLIL representation for module `\IODELAY'.
Generating RTLIL representation for module `\IEM'.
Generating RTLIL representation for module `\ROM16'.
Generating RTLIL representation for module `\ROM'.
Generating RTLIL representation for module `\ROMX9'.
Generating RTLIL representation for module `\rSDP'.
Generating RTLIL representation for module `\rSDPX9'.
Generating RTLIL representation for module `\rROM'.
Generating RTLIL representation for module `\rROMX9'.
Generating RTLIL representation for module `\pROM'.
Generating RTLIL representation for module `\pROMX9'.
Generating RTLIL representation for module `\SDPB'.
Generating RTLIL representation for module `\SDPX9B'.
Generating RTLIL representation for module `\DPB'.
Generating RTLIL representation for module `\DPX9B'.
Generating RTLIL representation for module `\PADD18'.
Generating RTLIL representation for module `\PADD9'.
Generating RTLIL representation for module `\MULT9X9'.
Generating RTLIL representation for module `\MULT18X18'.
Generating RTLIL representation for module `\MULT36X36'.
Generating RTLIL representation for module `\MULTALU36X18'.
Generating RTLIL representation for module `\MULTADDALU18X18'.
Generating RTLIL representation for module `\MULTALU18X18'.
Generating RTLIL representation for module `\ALU54D'.
Generating RTLIL representation for module `\BUFG'.
Generating RTLIL representation for module `\BUFS'.
Generating RTLIL representation for module `\PLL'.
Generating RTLIL representation for module `\TLVDS_IBUF'.
Generating RTLIL representation for module `\TLVDS_TBUF'.
Generating RTLIL representation for module `\TLVDS_IOBUF'.
Generating RTLIL representation for module `\ELVDS_IBUF'.
Generating RTLIL representation for module `\ELVDS_TBUF'.
Generating RTLIL representation for module `\ELVDS_IOBUF'.
Generating RTLIL representation for module `\MIPI_IBUF'.
Generating RTLIL representation for module `\MIPI_IBUF_HS'.
Generating RTLIL representation for module `\MIPI_IBUF_LP'.
Generating RTLIL representation for module `\MIPI_OBUF'.
Generating RTLIL representation for module `\MIPI_OBUF_A'.
Generating RTLIL representation for module `\I3C_IOBUF'.
Generating RTLIL representation for module `\CLKDIV'.
Generating RTLIL representation for module `\DHCEN'.
Generating RTLIL representation for module `\DLL'.
Generating RTLIL representation for module `\DLLDLY'.
Generating RTLIL representation for module `\FLASH96K'.
Generating RTLIL representation for module `\FLASH256K'.
Generating RTLIL representation for module `\FLASH608K'.
Generating RTLIL representation for module `\DCS'.
Generating RTLIL representation for module `\DQCE'.
Generating RTLIL representation for module `\FLASH128K'.
Generating RTLIL representation for module `\MCU'.
Generating RTLIL representation for module `\USB20_PHY'.
Generating RTLIL representation for module `\ADC'.
Generating RTLIL representation for module `\BANDGAP'.
Generating RTLIL representation for module `\CLKDIV2'.
Generating RTLIL representation for module `\DCC'.
Generating RTLIL representation for module `\DHCENC'.
Generating RTLIL representation for module `\EMCU'.
Generating RTLIL representation for module `\FLASH64K'.
Generating RTLIL representation for module `\FLASH64KZ'.
Generating RTLIL representation for module `\I3C'.
Generating RTLIL representation for module `\IODELAYA'.
Generating RTLIL representation for module `\IODELAYC'.
Generating RTLIL representation for module `\SPMI'.
Generating RTLIL representation for module `\IODELAYB'.
Generating RTLIL representation for module `\PLLO'.
Generating RTLIL representation for module `\DCCG'.
Generating RTLIL representation for module `\FLASH96KA'.
Generating RTLIL representation for module `\MIPI_DPHY_RX'.
Generating RTLIL representation for module `\CLKDIVG'.
Successfully finished Verilog frontend.

5.3. Executing HIERARCHY pass (managing design hierarchy).

5.3.1. Analyzing design hierarchy..
Top module:  \pong_pt1_wrapper
Used module:     \pong_pt1
Used module:         $paramod$d8802eb12a6a84ebef2be634f594ec2cf86160e1\pixel_gen

5.3.2. Analyzing design hierarchy..
Top module:  \pong_pt1_wrapper
Used module:     \pong_pt1
Used module:         $paramod$d8802eb12a6a84ebef2be634f594ec2cf86160e1\pixel_gen
Removed 0 unused modules.

5.4. Executing PROC pass (convert processes to netlists).

5.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\ALU.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:913$391'.
Cleaned up 1 empty switch.

5.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$451 in module RAM16S4.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1025$415 in module RAM16S2.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:987$396 in module RAM16S1.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:535$387 in module DFFNCE.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:515$385 in module DFFNC.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:496$383 in module DFFNPE.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:476$381 in module DFFNP.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:457$379 in module DFFNRE.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:437$377 in module DFFNR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:418$375 in module DFFNSE.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:398$373 in module DFFNS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:348$367 in module DFFCE.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:328$365 in module DFFC.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:309$363 in module DFFPE.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:289$361 in module DFFP.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:270$359 in module DFFRE.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:250$357 in module DFFR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:231$355 in module DFFSE.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:211$353 in module DFFS.
Marked 4 switch rules as full_case in process $proc$../../../../source/pixel_gen.v:185$164 in module $paramod$d8802eb12a6a84ebef2be634f594ec2cf86160e1\pixel_gen.
Marked 4 switch rules as full_case in process $proc$../../../../source/pixel_gen.v:168$153 in module $paramod$d8802eb12a6a84ebef2be634f594ec2cf86160e1\pixel_gen.
Marked 2 switch rules as full_case in process $proc$../../../../source/pixel_gen.v:155$149 in module $paramod$d8802eb12a6a84ebef2be634f594ec2cf86160e1\pixel_gen.
Marked 3 switch rules as full_case in process $proc$../../../../source/pixel_gen.v:129$125 in module $paramod$d8802eb12a6a84ebef2be634f594ec2cf86160e1\pixel_gen.
Removed 1 dead cases from process $proc$../../../../source/pixel_gen.v:97$111 in module $paramod$d8802eb12a6a84ebef2be634f594ec2cf86160e1\pixel_gen.
Marked 1 switch rules as full_case in process $proc$../../../../source/pixel_gen.v:97$111 in module $paramod$d8802eb12a6a84ebef2be634f594ec2cf86160e1\pixel_gen.
Marked 1 switch rules as full_case in process $proc$../../../../source/pixel_gen.v:80$110 in module $paramod$d8802eb12a6a84ebef2be634f594ec2cf86160e1\pixel_gen.
Marked 3 switch rules as full_case in process $proc$../../../../source/pong_pt1.v:38$34 in module pong_pt1.
Marked 1 switch rules as full_case in process $proc$../../../../source/pong_pt1.v:29$32 in module pong_pt1.
Removed 1 dead cases from process $proc$../../../pong_pt1_wrapper.v:50$6 in module pong_pt1_wrapper.
Marked 3 switch rules as full_case in process $proc$../../../pong_pt1_wrapper.v:50$6 in module pong_pt1_wrapper.
Removed a total of 2 dead cases.

5.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 14 redundant assignments.
Promoted 68 assignments to connections.

5.4.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$496'.
  Set init value: \mem0 = 16'0000000000000000
  Set init value: \mem1 = 16'0000000000000000
  Set init value: \mem2 = 16'0000000000000000
  Set init value: \mem3 = 16'0000000000000000
Found init rule in `\RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$438'.
  Set init value: \mem0 = 16'0000000000000000
  Set init value: \mem1 = 16'0000000000000000
Found init rule in `\RAM16S1.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$408'.
  Set init value: \mem = 16'0000000000000000
Found init rule in `\DFFNCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$388'.
  Set init value: \Q = 1'0
Found init rule in `\DFFNC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$386'.
  Set init value: \Q = 1'0
Found init rule in `\DFFNPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$384'.
  Set init value: \Q = 1'1
Found init rule in `\DFFNP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$382'.
  Set init value: \Q = 1'1
Found init rule in `\DFFNRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$380'.
  Set init value: \Q = 1'0
Found init rule in `\DFFNR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$378'.
  Set init value: \Q = 1'0
Found init rule in `\DFFNSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$376'.
  Set init value: \Q = 1'1
Found init rule in `\DFFNS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$374'.
  Set init value: \Q = 1'1
Found init rule in `\DFFNE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$372'.
  Set init value: \Q = 1'0
Found init rule in `\DFFN.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$370'.
  Set init value: \Q = 1'0
Found init rule in `\DFFCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$368'.
  Set init value: \Q = 1'0
Found init rule in `\DFFC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$366'.
  Set init value: \Q = 1'0
Found init rule in `\DFFPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$364'.
  Set init value: \Q = 1'1
Found init rule in `\DFFP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$362'.
  Set init value: \Q = 1'1
Found init rule in `\DFFRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$360'.
  Set init value: \Q = 1'0
Found init rule in `\DFFR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$358'.
  Set init value: \Q = 1'0
Found init rule in `\DFFSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$356'.
  Set init value: \Q = 1'1
Found init rule in `\DFFS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$354'.
  Set init value: \Q = 1'1
Found init rule in `\DFFE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$352'.
  Set init value: \Q = 1'0
Found init rule in `\DFF.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$350'.
  Set init value: \Q = 1'0

5.4.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \CLEAR in `\DFFNCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:535$387'.
Found async reset \CLEAR in `\DFFNC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:515$385'.
Found async reset \PRESET in `\DFFNPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:496$383'.
Found async reset \PRESET in `\DFFNP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:476$381'.
Found async reset \CLEAR in `\DFFCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:348$367'.
Found async reset \CLEAR in `\DFFC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:328$365'.
Found async reset \PRESET in `\DFFPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:309$363'.
Found async reset \PRESET in `\DFFP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:289$361'.
Found async reset \reset in `$paramod$d8802eb12a6a84ebef2be634f594ec2cf86160e1\pixel_gen.$proc$../../../../source/pixel_gen.v:80$110'.
Found async reset \reset in `\pong_pt1.$proc$../../../../source/pong_pt1.v:38$34'.
Found async reset \reset in `\pong_pt1.$proc$../../../../source/pong_pt1.v:29$32'.

5.4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 1 switch.
<suppressed ~40 debug messages>

5.4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$496'.
Creating decoders for process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$451'.
     1/8: $1$lookahead\mem3$450[15:0]$467
     2/8: $1$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1075$442[3:0]$463
     3/8: $1$lookahead\mem2$449[15:0]$466
     4/8: $1$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1074$441[3:0]$462
     5/8: $1$lookahead\mem1$448[15:0]$465
     6/8: $1$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1073$440[3:0]$461
     7/8: $1$lookahead\mem0$447[15:0]$464
     8/8: $1$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1072$439[3:0]$460
Creating decoders for process `\RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$438'.
Creating decoders for process `\RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1025$415'.
     1/4: $1$lookahead\mem1$414[15:0]$423
     2/4: $1$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1028$410[3:0]$421
     3/4: $1$lookahead\mem0$413[15:0]$422
     4/4: $1$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1027$409[3:0]$420
Creating decoders for process `\RAM16S1.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$408'.
Creating decoders for process `\RAM16S1.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:987$396'.
     1/2: $1$lookahead\mem$395[15:0]$400
     2/2: $1$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:989$393[3:0]$399
Creating decoders for process `\ALU.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:913$391'.
Creating decoders for process `\DFFNCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$388'.
Creating decoders for process `\DFFNCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:535$387'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$386'.
Creating decoders for process `\DFFNC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:515$385'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$384'.
Creating decoders for process `\DFFNPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:496$383'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$382'.
Creating decoders for process `\DFFNP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:476$381'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$380'.
Creating decoders for process `\DFFNRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:457$379'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$378'.
Creating decoders for process `\DFFNR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:437$377'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$376'.
Creating decoders for process `\DFFNSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:418$375'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$374'.
Creating decoders for process `\DFFNS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:398$373'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$372'.
Creating decoders for process `\DFFNE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:381$371'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFN.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$370'.
Creating decoders for process `\DFFN.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:366$369'.
Creating decoders for process `\DFFCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$368'.
Creating decoders for process `\DFFCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:348$367'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$366'.
Creating decoders for process `\DFFC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:328$365'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$364'.
Creating decoders for process `\DFFPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:309$363'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$362'.
Creating decoders for process `\DFFP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:289$361'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$360'.
Creating decoders for process `\DFFRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:270$359'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$358'.
Creating decoders for process `\DFFR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:250$357'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$356'.
Creating decoders for process `\DFFSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:231$355'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$354'.
Creating decoders for process `\DFFS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:211$353'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$352'.
Creating decoders for process `\DFFE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:194$351'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFF.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$350'.
Creating decoders for process `\DFF.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:179$349'.
Creating decoders for process `$paramod$d8802eb12a6a84ebef2be634f594ec2cf86160e1\pixel_gen.$proc$../../../../source/pixel_gen.v:185$164'.
     1/4: $4\rgb[11:0]
     2/4: $3\rgb[11:0]
     3/4: $2\rgb[11:0]
     4/4: $1\rgb[11:0]
Creating decoders for process `$paramod$d8802eb12a6a84ebef2be634f594ec2cf86160e1\pixel_gen.$proc$../../../../source/pixel_gen.v:168$153'.
     1/6: $4\x_delta_next[8:0]
     2/6: $3\x_delta_next[8:0]
     3/6: $2\y_delta_next[7:0]
     4/6: $2\x_delta_next[8:0]
     5/6: $1\y_delta_next[7:0]
     6/6: $1\x_delta_next[8:0]
Creating decoders for process `$paramod$d8802eb12a6a84ebef2be634f594ec2cf86160e1\pixel_gen.$proc$../../../../source/pixel_gen.v:155$149'.
     1/2: $2\x_ball_next[8:0]
     2/2: $1\x_ball_next[8:0]
Creating decoders for process `$paramod$d8802eb12a6a84ebef2be634f594ec2cf86160e1\pixel_gen.$proc$../../../../source/pixel_gen.v:129$125'.
     1/3: $3\y_pad_next[7:0]
     2/3: $2\y_pad_next[7:0]
     3/3: $1\y_pad_next[7:0]
Creating decoders for process `$paramod$d8802eb12a6a84ebef2be634f594ec2cf86160e1\pixel_gen.$proc$../../../../source/pixel_gen.v:97$111'.
     1/1: $1\rom_data[7:0]
Creating decoders for process `$paramod$d8802eb12a6a84ebef2be634f594ec2cf86160e1\pixel_gen.$proc$../../../../source/pixel_gen.v:80$110'.
     1/5: $0\y_delta_reg[7:0]
     2/5: $0\x_delta_reg[8:0]
     3/5: $0\y_ball_reg[7:0]
     4/5: $0\x_ball_reg[8:0]
     5/5: $0\y_pad_reg[7:0]
Creating decoders for process `\pong_pt1.$proc$../../../../source/pong_pt1.v:38$34'.
     1/2: $0\y[7:0]
     2/2: $0\x[8:0]
Creating decoders for process `\pong_pt1.$proc$../../../../source/pong_pt1.v:29$32'.
     1/1: $0\pixel_tick[0:0]
Creating decoders for process `\pong_pt1_wrapper.$proc$../../../pong_pt1_wrapper.v:50$6'.
     1/23: $3$mem2reg_rd$\vectOut$../../../pong_pt1_wrapper.v:69$1_DATA[7:0]$31
     2/23: $0\vectOut[0][6:0] [4]
     3/23: $0\vectOut[0][6:0] [3:0]
     4/23: $0\vectOut[0][6:0] [5]
     5/23: $0\vectOut[0][6:0] [6]
     6/23: $2$memwr$\stimIn$../../../pong_pt1_wrapper.v:68$5_DATA[7:0]$29
     7/23: $2$memwr$\stimIn$../../../pong_pt1_wrapper.v:68$5_ADDR[2:0]$28
     8/23: $2$mem2reg_rd$\vectOut$../../../pong_pt1_wrapper.v:69$1_DATA[7:0]$27
     9/23: $2$mem2reg_rd$\vectOut$../../../pong_pt1_wrapper.v:69$1_ADDR[0:0]$26
    10/23: $1$mem2bits$\stimIn$../../../pong_pt1_wrapper.v:56$4[7:0]$19
    11/23: $1$mem2bits$\stimIn$../../../pong_pt1_wrapper.v:55$3[7:0]$18
    12/23: $1$mem2bits$\stimIn$../../../pong_pt1_wrapper.v:54$2[7:0]$17
    13/23: $1$memwr$\stimIn$../../../pong_pt1_wrapper.v:68$5_EN[7:0]$22
    14/23: $1$memwr$\stimIn$../../../pong_pt1_wrapper.v:68$5_DATA[7:0]$21
    15/23: $1$memwr$\stimIn$../../../pong_pt1_wrapper.v:68$5_ADDR[2:0]$20
    16/23: $1$mem2reg_rd$\vectOut$../../../pong_pt1_wrapper.v:69$1_DATA[7:0]$16
    17/23: $1$mem2reg_rd$\vectOut$../../../pong_pt1_wrapper.v:69$1_ADDR[0:0]$15
    18/23: $0\vectOut[1][7:0]
    19/23: $2$memwr$\stimIn$../../../pong_pt1_wrapper.v:68$5_EN[7:0]$30
    20/23: $0\down[0:0]
    21/23: $0\up[0:0]
    22/23: $0\reset[0:0]
    23/23: $0\Dout_emu[7:0]

5.4.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod$d8802eb12a6a84ebef2be634f594ec2cf86160e1\pixel_gen.\rgb' from process `$paramod$d8802eb12a6a84ebef2be634f594ec2cf86160e1\pixel_gen.$proc$../../../../source/pixel_gen.v:185$164'.
No latch inferred for signal `$paramod$d8802eb12a6a84ebef2be634f594ec2cf86160e1\pixel_gen.\x_delta_next' from process `$paramod$d8802eb12a6a84ebef2be634f594ec2cf86160e1\pixel_gen.$proc$../../../../source/pixel_gen.v:168$153'.
No latch inferred for signal `$paramod$d8802eb12a6a84ebef2be634f594ec2cf86160e1\pixel_gen.\y_delta_next' from process `$paramod$d8802eb12a6a84ebef2be634f594ec2cf86160e1\pixel_gen.$proc$../../../../source/pixel_gen.v:168$153'.
No latch inferred for signal `$paramod$d8802eb12a6a84ebef2be634f594ec2cf86160e1\pixel_gen.\x_ball_next' from process `$paramod$d8802eb12a6a84ebef2be634f594ec2cf86160e1\pixel_gen.$proc$../../../../source/pixel_gen.v:155$149'.
No latch inferred for signal `$paramod$d8802eb12a6a84ebef2be634f594ec2cf86160e1\pixel_gen.\y_pad_next' from process `$paramod$d8802eb12a6a84ebef2be634f594ec2cf86160e1\pixel_gen.$proc$../../../../source/pixel_gen.v:129$125'.
No latch inferred for signal `$paramod$d8802eb12a6a84ebef2be634f594ec2cf86160e1\pixel_gen.\rom_data' from process `$paramod$d8802eb12a6a84ebef2be634f594ec2cf86160e1\pixel_gen.$proc$../../../../source/pixel_gen.v:97$111'.

5.4.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\RAM16S4.\mem0' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$451'.
  created $dff cell `$procdff$812' with positive edge clock.
Creating register for signal `\RAM16S4.\mem1' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$451'.
  created $dff cell `$procdff$813' with positive edge clock.
Creating register for signal `\RAM16S4.\mem2' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$451'.
  created $dff cell `$procdff$814' with positive edge clock.
Creating register for signal `\RAM16S4.\mem3' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$451'.
  created $dff cell `$procdff$815' with positive edge clock.
Creating register for signal `\RAM16S4.$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1072$439' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$451'.
  created $dff cell `$procdff$816' with positive edge clock.
Creating register for signal `\RAM16S4.$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1073$440' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$451'.
  created $dff cell `$procdff$817' with positive edge clock.
Creating register for signal `\RAM16S4.$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1074$441' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$451'.
  created $dff cell `$procdff$818' with positive edge clock.
Creating register for signal `\RAM16S4.$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1075$442' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$451'.
  created $dff cell `$procdff$819' with positive edge clock.
Creating register for signal `\RAM16S4.$lookahead\mem0$447' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$451'.
  created $dff cell `$procdff$820' with positive edge clock.
Creating register for signal `\RAM16S4.$lookahead\mem1$448' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$451'.
  created $dff cell `$procdff$821' with positive edge clock.
Creating register for signal `\RAM16S4.$lookahead\mem2$449' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$451'.
  created $dff cell `$procdff$822' with positive edge clock.
Creating register for signal `\RAM16S4.$lookahead\mem3$450' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$451'.
  created $dff cell `$procdff$823' with positive edge clock.
Creating register for signal `\RAM16S2.\mem0' using process `\RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1025$415'.
  created $dff cell `$procdff$824' with positive edge clock.
Creating register for signal `\RAM16S2.\mem1' using process `\RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1025$415'.
  created $dff cell `$procdff$825' with positive edge clock.
Creating register for signal `\RAM16S2.$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1027$409' using process `\RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1025$415'.
  created $dff cell `$procdff$826' with positive edge clock.
Creating register for signal `\RAM16S2.$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1028$410' using process `\RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1025$415'.
  created $dff cell `$procdff$827' with positive edge clock.
Creating register for signal `\RAM16S2.$lookahead\mem0$413' using process `\RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1025$415'.
  created $dff cell `$procdff$828' with positive edge clock.
Creating register for signal `\RAM16S2.$lookahead\mem1$414' using process `\RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1025$415'.
  created $dff cell `$procdff$829' with positive edge clock.
Creating register for signal `\RAM16S1.\mem' using process `\RAM16S1.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:987$396'.
  created $dff cell `$procdff$830' with positive edge clock.
Creating register for signal `\RAM16S1.$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:989$393' using process `\RAM16S1.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:987$396'.
  created $dff cell `$procdff$831' with positive edge clock.
Creating register for signal `\RAM16S1.$lookahead\mem$395' using process `\RAM16S1.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:987$396'.
  created $dff cell `$procdff$832' with positive edge clock.
Creating register for signal `\ALU.\C' using process `\ALU.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:913$391'.
  created direct connection (no actual register cell created).
Creating register for signal `\ALU.\S' using process `\ALU.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:913$391'.
  created direct connection (no actual register cell created).
Creating register for signal `\DFFNCE.\Q' using process `\DFFNCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:535$387'.
  created $adff cell `$procdff$833' with negative edge clock and positive level reset.
Creating register for signal `\DFFNC.\Q' using process `\DFFNC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:515$385'.
  created $adff cell `$procdff$834' with negative edge clock and positive level reset.
Creating register for signal `\DFFNPE.\Q' using process `\DFFNPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:496$383'.
  created $adff cell `$procdff$835' with negative edge clock and positive level reset.
Creating register for signal `\DFFNP.\Q' using process `\DFFNP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:476$381'.
  created $adff cell `$procdff$836' with negative edge clock and positive level reset.
Creating register for signal `\DFFNRE.\Q' using process `\DFFNRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:457$379'.
  created $dff cell `$procdff$837' with negative edge clock.
Creating register for signal `\DFFNR.\Q' using process `\DFFNR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:437$377'.
  created $dff cell `$procdff$838' with negative edge clock.
Creating register for signal `\DFFNSE.\Q' using process `\DFFNSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:418$375'.
  created $dff cell `$procdff$839' with negative edge clock.
Creating register for signal `\DFFNS.\Q' using process `\DFFNS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:398$373'.
  created $dff cell `$procdff$840' with negative edge clock.
Creating register for signal `\DFFNE.\Q' using process `\DFFNE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:381$371'.
  created $dff cell `$procdff$841' with negative edge clock.
Creating register for signal `\DFFN.\Q' using process `\DFFN.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:366$369'.
  created $dff cell `$procdff$842' with negative edge clock.
Creating register for signal `\DFFCE.\Q' using process `\DFFCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:348$367'.
  created $adff cell `$procdff$843' with positive edge clock and positive level reset.
Creating register for signal `\DFFC.\Q' using process `\DFFC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:328$365'.
  created $adff cell `$procdff$844' with positive edge clock and positive level reset.
Creating register for signal `\DFFPE.\Q' using process `\DFFPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:309$363'.
  created $adff cell `$procdff$845' with positive edge clock and positive level reset.
Creating register for signal `\DFFP.\Q' using process `\DFFP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:289$361'.
  created $adff cell `$procdff$846' with positive edge clock and positive level reset.
Creating register for signal `\DFFRE.\Q' using process `\DFFRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:270$359'.
  created $dff cell `$procdff$847' with positive edge clock.
Creating register for signal `\DFFR.\Q' using process `\DFFR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:250$357'.
  created $dff cell `$procdff$848' with positive edge clock.
Creating register for signal `\DFFSE.\Q' using process `\DFFSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:231$355'.
  created $dff cell `$procdff$849' with positive edge clock.
Creating register for signal `\DFFS.\Q' using process `\DFFS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:211$353'.
  created $dff cell `$procdff$850' with positive edge clock.
Creating register for signal `\DFFE.\Q' using process `\DFFE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:194$351'.
  created $dff cell `$procdff$851' with positive edge clock.
Creating register for signal `\DFF.\Q' using process `\DFF.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:179$349'.
  created $dff cell `$procdff$852' with positive edge clock.
Creating register for signal `$paramod$d8802eb12a6a84ebef2be634f594ec2cf86160e1\pixel_gen.\y_pad_reg' using process `$paramod$d8802eb12a6a84ebef2be634f594ec2cf86160e1\pixel_gen.$proc$../../../../source/pixel_gen.v:80$110'.
  created $adff cell `$procdff$853' with positive edge clock and positive level reset.
Creating register for signal `$paramod$d8802eb12a6a84ebef2be634f594ec2cf86160e1\pixel_gen.\y_ball_reg' using process `$paramod$d8802eb12a6a84ebef2be634f594ec2cf86160e1\pixel_gen.$proc$../../../../source/pixel_gen.v:80$110'.
  created $adff cell `$procdff$854' with positive edge clock and positive level reset.
Creating register for signal `$paramod$d8802eb12a6a84ebef2be634f594ec2cf86160e1\pixel_gen.\x_ball_reg' using process `$paramod$d8802eb12a6a84ebef2be634f594ec2cf86160e1\pixel_gen.$proc$../../../../source/pixel_gen.v:80$110'.
  created $adff cell `$procdff$855' with positive edge clock and positive level reset.
Creating register for signal `$paramod$d8802eb12a6a84ebef2be634f594ec2cf86160e1\pixel_gen.\x_delta_reg' using process `$paramod$d8802eb12a6a84ebef2be634f594ec2cf86160e1\pixel_gen.$proc$../../../../source/pixel_gen.v:80$110'.
  created $adff cell `$procdff$856' with positive edge clock and positive level reset.
Creating register for signal `$paramod$d8802eb12a6a84ebef2be634f594ec2cf86160e1\pixel_gen.\y_delta_reg' using process `$paramod$d8802eb12a6a84ebef2be634f594ec2cf86160e1\pixel_gen.$proc$../../../../source/pixel_gen.v:80$110'.
  created $adff cell `$procdff$857' with positive edge clock and positive level reset.
Creating register for signal `\pong_pt1.\x' using process `\pong_pt1.$proc$../../../../source/pong_pt1.v:38$34'.
  created $adff cell `$procdff$858' with positive edge clock and positive level reset.
Creating register for signal `\pong_pt1.\y' using process `\pong_pt1.$proc$../../../../source/pong_pt1.v:38$34'.
  created $adff cell `$procdff$859' with positive edge clock and positive level reset.
Creating register for signal `\pong_pt1.\pixel_tick' using process `\pong_pt1.$proc$../../../../source/pong_pt1.v:29$32'.
  created $adff cell `$procdff$860' with positive edge clock and positive level reset.
Creating register for signal `\pong_pt1_wrapper.\Dout_emu' using process `\pong_pt1_wrapper.$proc$../../../pong_pt1_wrapper.v:50$6'.
  created $dff cell `$procdff$861' with positive edge clock.
Creating register for signal `\pong_pt1_wrapper.\reset' using process `\pong_pt1_wrapper.$proc$../../../pong_pt1_wrapper.v:50$6'.
  created $dff cell `$procdff$862' with positive edge clock.
Creating register for signal `\pong_pt1_wrapper.\up' using process `\pong_pt1_wrapper.$proc$../../../pong_pt1_wrapper.v:50$6'.
  created $dff cell `$procdff$863' with positive edge clock.
Creating register for signal `\pong_pt1_wrapper.\down' using process `\pong_pt1_wrapper.$proc$../../../pong_pt1_wrapper.v:50$6'.
  created $dff cell `$procdff$864' with positive edge clock.
Creating register for signal `\pong_pt1_wrapper.\vectOut[0] [6:0]' using process `\pong_pt1_wrapper.$proc$../../../pong_pt1_wrapper.v:50$6'.
  created $dff cell `$procdff$865' with positive edge clock.
Creating register for signal `\pong_pt1_wrapper.\vectOut[1]' using process `\pong_pt1_wrapper.$proc$../../../pong_pt1_wrapper.v:50$6'.
  created $dff cell `$procdff$866' with positive edge clock.
Creating register for signal `\pong_pt1_wrapper.$mem2reg_rd$\vectOut$../../../pong_pt1_wrapper.v:69$1_ADDR' using process `\pong_pt1_wrapper.$proc$../../../pong_pt1_wrapper.v:50$6'.
  created $dff cell `$procdff$867' with positive edge clock.
Creating register for signal `\pong_pt1_wrapper.$mem2reg_rd$\vectOut$../../../pong_pt1_wrapper.v:69$1_DATA' using process `\pong_pt1_wrapper.$proc$../../../pong_pt1_wrapper.v:50$6'.
  created $dff cell `$procdff$868' with positive edge clock.
Creating register for signal `\pong_pt1_wrapper.$mem2bits$\stimIn$../../../pong_pt1_wrapper.v:54$2' using process `\pong_pt1_wrapper.$proc$../../../pong_pt1_wrapper.v:50$6'.
  created $dff cell `$procdff$869' with positive edge clock.
Creating register for signal `\pong_pt1_wrapper.$mem2bits$\stimIn$../../../pong_pt1_wrapper.v:55$3' using process `\pong_pt1_wrapper.$proc$../../../pong_pt1_wrapper.v:50$6'.
  created $dff cell `$procdff$870' with positive edge clock.
Creating register for signal `\pong_pt1_wrapper.$mem2bits$\stimIn$../../../pong_pt1_wrapper.v:56$4' using process `\pong_pt1_wrapper.$proc$../../../pong_pt1_wrapper.v:50$6'.
  created $dff cell `$procdff$871' with positive edge clock.
Creating register for signal `\pong_pt1_wrapper.$memwr$\stimIn$../../../pong_pt1_wrapper.v:68$5_ADDR' using process `\pong_pt1_wrapper.$proc$../../../pong_pt1_wrapper.v:50$6'.
  created $dff cell `$procdff$872' with positive edge clock.
Creating register for signal `\pong_pt1_wrapper.$memwr$\stimIn$../../../pong_pt1_wrapper.v:68$5_DATA' using process `\pong_pt1_wrapper.$proc$../../../pong_pt1_wrapper.v:50$6'.
  created $dff cell `$procdff$873' with positive edge clock.
Creating register for signal `\pong_pt1_wrapper.$memwr$\stimIn$../../../pong_pt1_wrapper.v:68$5_EN' using process `\pong_pt1_wrapper.$proc$../../../pong_pt1_wrapper.v:50$6'.
  created $dff cell `$procdff$874' with positive edge clock.

5.4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

5.4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$496'.
Found and cleaned up 1 empty switch in `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$451'.
Removing empty process `RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$451'.
Removing empty process `RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$438'.
Found and cleaned up 1 empty switch in `\RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1025$415'.
Removing empty process `RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1025$415'.
Removing empty process `RAM16S1.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$408'.
Found and cleaned up 1 empty switch in `\RAM16S1.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:987$396'.
Removing empty process `RAM16S1.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:987$396'.
Removing empty process `ALU.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:913$391'.
Removing empty process `DFFNCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$388'.
Found and cleaned up 1 empty switch in `\DFFNCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:535$387'.
Removing empty process `DFFNCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:535$387'.
Removing empty process `DFFNC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$386'.
Removing empty process `DFFNC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:515$385'.
Removing empty process `DFFNPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$384'.
Found and cleaned up 1 empty switch in `\DFFNPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:496$383'.
Removing empty process `DFFNPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:496$383'.
Removing empty process `DFFNP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$382'.
Removing empty process `DFFNP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:476$381'.
Removing empty process `DFFNRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$380'.
Found and cleaned up 2 empty switches in `\DFFNRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:457$379'.
Removing empty process `DFFNRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:457$379'.
Removing empty process `DFFNR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$378'.
Found and cleaned up 1 empty switch in `\DFFNR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:437$377'.
Removing empty process `DFFNR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:437$377'.
Removing empty process `DFFNSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$376'.
Found and cleaned up 2 empty switches in `\DFFNSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:418$375'.
Removing empty process `DFFNSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:418$375'.
Removing empty process `DFFNS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$374'.
Found and cleaned up 1 empty switch in `\DFFNS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:398$373'.
Removing empty process `DFFNS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:398$373'.
Removing empty process `DFFNE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$372'.
Found and cleaned up 1 empty switch in `\DFFNE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:381$371'.
Removing empty process `DFFNE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:381$371'.
Removing empty process `DFFN.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$370'.
Removing empty process `DFFN.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:366$369'.
Removing empty process `DFFCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$368'.
Found and cleaned up 1 empty switch in `\DFFCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:348$367'.
Removing empty process `DFFCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:348$367'.
Removing empty process `DFFC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$366'.
Removing empty process `DFFC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:328$365'.
Removing empty process `DFFPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$364'.
Found and cleaned up 1 empty switch in `\DFFPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:309$363'.
Removing empty process `DFFPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:309$363'.
Removing empty process `DFFP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$362'.
Removing empty process `DFFP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:289$361'.
Removing empty process `DFFRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$360'.
Found and cleaned up 2 empty switches in `\DFFRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:270$359'.
Removing empty process `DFFRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:270$359'.
Removing empty process `DFFR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$358'.
Found and cleaned up 1 empty switch in `\DFFR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:250$357'.
Removing empty process `DFFR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:250$357'.
Removing empty process `DFFSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$356'.
Found and cleaned up 2 empty switches in `\DFFSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:231$355'.
Removing empty process `DFFSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:231$355'.
Removing empty process `DFFS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$354'.
Found and cleaned up 1 empty switch in `\DFFS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:211$353'.
Removing empty process `DFFS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:211$353'.
Removing empty process `DFFE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$352'.
Found and cleaned up 1 empty switch in `\DFFE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:194$351'.
Removing empty process `DFFE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:194$351'.
Removing empty process `DFF.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$350'.
Removing empty process `DFF.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:179$349'.
Found and cleaned up 4 empty switches in `$paramod$d8802eb12a6a84ebef2be634f594ec2cf86160e1\pixel_gen.$proc$../../../../source/pixel_gen.v:185$164'.
Removing empty process `$paramod$d8802eb12a6a84ebef2be634f594ec2cf86160e1\pixel_gen.$proc$../../../../source/pixel_gen.v:185$164'.
Found and cleaned up 4 empty switches in `$paramod$d8802eb12a6a84ebef2be634f594ec2cf86160e1\pixel_gen.$proc$../../../../source/pixel_gen.v:168$153'.
Removing empty process `$paramod$d8802eb12a6a84ebef2be634f594ec2cf86160e1\pixel_gen.$proc$../../../../source/pixel_gen.v:168$153'.
Found and cleaned up 2 empty switches in `$paramod$d8802eb12a6a84ebef2be634f594ec2cf86160e1\pixel_gen.$proc$../../../../source/pixel_gen.v:155$149'.
Removing empty process `$paramod$d8802eb12a6a84ebef2be634f594ec2cf86160e1\pixel_gen.$proc$../../../../source/pixel_gen.v:155$149'.
Found and cleaned up 3 empty switches in `$paramod$d8802eb12a6a84ebef2be634f594ec2cf86160e1\pixel_gen.$proc$../../../../source/pixel_gen.v:129$125'.
Removing empty process `$paramod$d8802eb12a6a84ebef2be634f594ec2cf86160e1\pixel_gen.$proc$../../../../source/pixel_gen.v:129$125'.
Found and cleaned up 1 empty switch in `$paramod$d8802eb12a6a84ebef2be634f594ec2cf86160e1\pixel_gen.$proc$../../../../source/pixel_gen.v:97$111'.
Removing empty process `$paramod$d8802eb12a6a84ebef2be634f594ec2cf86160e1\pixel_gen.$proc$../../../../source/pixel_gen.v:97$111'.
Removing empty process `$paramod$d8802eb12a6a84ebef2be634f594ec2cf86160e1\pixel_gen.$proc$../../../../source/pixel_gen.v:80$110'.
Found and cleaned up 3 empty switches in `\pong_pt1.$proc$../../../../source/pong_pt1.v:38$34'.
Removing empty process `pong_pt1.$proc$../../../../source/pong_pt1.v:38$34'.
Removing empty process `pong_pt1.$proc$../../../../source/pong_pt1.v:29$32'.
Found and cleaned up 3 empty switches in `\pong_pt1_wrapper.$proc$../../../pong_pt1_wrapper.v:50$6'.
Removing empty process `pong_pt1_wrapper.$proc$../../../pong_pt1_wrapper.v:50$6'.
Cleaned up 41 empty switches.

5.4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$d8802eb12a6a84ebef2be634f594ec2cf86160e1\pixel_gen.
<suppressed ~5 debug messages>
Optimizing module pong_pt1.
Optimizing module pong_pt1_wrapper.
<suppressed ~1 debug messages>

5.5. Executing FLATTEN pass (flatten design).
Deleting now unused module $paramod$d8802eb12a6a84ebef2be634f594ec2cf86160e1\pixel_gen.
Deleting now unused module pong_pt1.
<suppressed ~2 debug messages>

5.6. Executing TRIBUF pass.

5.7. Executing DEMINOUT pass (demote inout ports to input or output).

5.8. Executing SYNTH pass.

5.8.1. Executing PROC pass (convert processes to netlists).

5.8.1.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

5.8.1.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

5.8.1.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

5.8.1.4. Executing PROC_INIT pass (extract init attributes).

5.8.1.5. Executing PROC_ARST pass (detect async resets in processes).

5.8.1.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

5.8.1.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

5.8.1.8. Executing PROC_DLATCH pass (convert process syncs to latches).

5.8.1.9. Executing PROC_DFF pass (convert process syncs to FFs).

5.8.1.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

5.8.1.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

5.8.1.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module pong_pt1_wrapper.

5.8.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module pong_pt1_wrapper.

5.8.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pong_pt1_wrapper..
Removed 18 unused cells and 167 unused wires.
<suppressed ~20 debug messages>

5.8.4. Executing CHECK pass (checking for obvious problems).
Checking module pong_pt1_wrapper...
Warning: Wire pong_pt1_wrapper.\vectOut[0] [7] is used but has no driver.
Found and reported 1 problems.

5.8.5. Executing OPT pass (performing simple optimizations).

5.8.5.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pong_pt1_wrapper.

5.8.5.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pong_pt1_wrapper'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

5.8.5.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pong_pt1_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $flatten\u_pong_pt1.\pg.$procmux$598.
    dead port 1/2 on $mux $flatten\u_pong_pt1.\pg.$procmux$601.
    dead port 2/2 on $mux $flatten\u_pong_pt1.\pg.$procmux$604.
    dead port 1/2 on $mux $flatten\u_pong_pt1.\pg.$procmux$610.
    dead port 2/2 on $mux $flatten\u_pong_pt1.\pg.$procmux$613.
    dead port 2/2 on $mux $flatten\u_pong_pt1.\pg.$procmux$619.
    dead port 1/2 on $mux $flatten\u_pong_pt1.\pg.$procmux$628.
    dead port 1/2 on $mux $flatten\u_pong_pt1.\pg.$procmux$631.
    dead port 1/2 on $mux $flatten\u_pong_pt1.\pg.$procmux$634.
    dead port 1/2 on $mux $flatten\u_pong_pt1.\pg.$procmux$640.
    dead port 1/2 on $mux $flatten\u_pong_pt1.\pg.$procmux$643.
    dead port 1/2 on $mux $flatten\u_pong_pt1.\pg.$procmux$649.
    dead port 1/2 on $mux $flatten\u_pong_pt1.\pg.$procmux$655.
    dead port 2/2 on $mux $flatten\u_pong_pt1.\pg.$procmux$667.
    dead port 1/2 on $mux $flatten\u_pong_pt1.\pg.$procmux$677.
    dead port 2/2 on $mux $flatten\u_pong_pt1.\pg.$procmux$679.
    dead port 2/2 on $mux $flatten\u_pong_pt1.\pg.$procmux$685.
    dead port 1/2 on $mux $procmux$708.
    dead port 1/2 on $mux $procmux$711.
    dead port 1/2 on $mux $procmux$741.
    dead port 1/2 on $mux $procmux$747.
    dead port 1/2 on $mux $procmux$795.
Removed 22 multiplexer ports.
<suppressed ~22 debug messages>

5.8.5.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pong_pt1_wrapper.
    Consolidated identical input bits for $mux cell $procmux$792:
      Old ports: A=8'11111111, B=8'00000000, Y=$procmux$792_Y
      New ports: A=1'1, B=1'0, Y=$procmux$792_Y [0]
      New connections: $procmux$792_Y [7:1] = { $procmux$792_Y [0] $procmux$792_Y [0] $procmux$792_Y [0] $procmux$792_Y [0] $procmux$792_Y [0] $procmux$792_Y [0] $procmux$792_Y [0] }
  Optimizing cells in module \pong_pt1_wrapper.
    Consolidated identical input bits for $mux cell $procmux$771:
      Old ports: A=$2$memwr$\stimIn$../../../pong_pt1_wrapper.v:68$5_EN[7:0]$30, B=8'00000000, Y=$0$memwr$\stimIn$../../../pong_pt1_wrapper.v:68$5_EN[7:0]$14
      New ports: A=$procmux$792_Y [0], B=1'0, Y=$0$memwr$\stimIn$../../../pong_pt1_wrapper.v:68$5_EN[7:0]$14 [0]
      New connections: $0$memwr$\stimIn$../../../pong_pt1_wrapper.v:68$5_EN[7:0]$14 [7:1] = { $0$memwr$\stimIn$../../../pong_pt1_wrapper.v:68$5_EN[7:0]$14 [0] $0$memwr$\stimIn$../../../pong_pt1_wrapper.v:68$5_EN[7:0]$14 [0] $0$memwr$\stimIn$../../../pong_pt1_wrapper.v:68$5_EN[7:0]$14 [0] $0$memwr$\stimIn$../../../pong_pt1_wrapper.v:68$5_EN[7:0]$14 [0] $0$memwr$\stimIn$../../../pong_pt1_wrapper.v:68$5_EN[7:0]$14 [0] $0$memwr$\stimIn$../../../pong_pt1_wrapper.v:68$5_EN[7:0]$14 [0] $0$memwr$\stimIn$../../../pong_pt1_wrapper.v:68$5_EN[7:0]$14 [0] }
  Optimizing cells in module \pong_pt1_wrapper.
Performed a total of 2 changes.

5.8.5.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pong_pt1_wrapper'.
Removed a total of 0 cells.

5.8.5.6. Executing OPT_DFF pass (perform DFF optimizations).

5.8.5.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pong_pt1_wrapper..
Removed 0 unused cells and 25 unused wires.
<suppressed ~1 debug messages>

5.8.5.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pong_pt1_wrapper.

5.8.5.9. Rerunning OPT passes. (Maybe there is more to do..)

5.8.5.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pong_pt1_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~22 debug messages>

5.8.5.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pong_pt1_wrapper.
Performed a total of 0 changes.

5.8.5.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pong_pt1_wrapper'.
Removed a total of 0 cells.

5.8.5.13. Executing OPT_DFF pass (perform DFF optimizations).

5.8.5.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pong_pt1_wrapper..

5.8.5.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module pong_pt1_wrapper.

5.8.5.16. Finished OPT passes. (There is nothing left to do.)

5.8.6. Executing FSM pass (extract and optimize FSM).

5.8.6.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking pong_pt1_wrapper.u_pong_pt1.pg.x_delta_reg as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking pong_pt1_wrapper.u_pong_pt1.pg.y_delta_reg as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking pong_pt1_wrapper.vectOut[1] as FSM state register:
    Users of register don't seem to benefit from recoding.

5.8.6.2. Executing FSM_EXTRACT pass (extracting FSM from design).

5.8.6.3. Executing FSM_OPT pass (simple optimizations of FSMs).

5.8.6.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pong_pt1_wrapper..

5.8.6.5. Executing FSM_OPT pass (simple optimizations of FSMs).

5.8.6.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

5.8.6.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

5.8.6.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

5.8.7. Executing OPT pass (performing simple optimizations).

5.8.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pong_pt1_wrapper.

5.8.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pong_pt1_wrapper'.
Removed a total of 0 cells.

5.8.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pong_pt1_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~22 debug messages>

5.8.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pong_pt1_wrapper.
Performed a total of 0 changes.

5.8.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pong_pt1_wrapper'.
Removed a total of 0 cells.

5.8.7.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$866 ($dff) from module pong_pt1_wrapper (D = \rgb [7:0], Q = \vectOut[1]).
Adding SRST signal on $auto$ff.cc:266:slice$878 ($dffe) from module pong_pt1_wrapper (D = { $flatten\u_pong_pt1.\pg.$2\rgb[11:0] [7] $flatten\u_pong_pt1.\pg.$2\rgb[11:0] [5] $flatten\u_pong_pt1.\pg.$2\rgb[11:0] [3] $flatten\u_pong_pt1.\pg.$2\rgb[11:0] [1] }, Q = { \vectOut[1] [7] \vectOut[1] [5] \vectOut[1] [3] \vectOut[1] [1] }, rval = 4'0000).
Adding SRST signal on $auto$ff.cc:266:slice$878 ($dffe) from module pong_pt1_wrapper (D = { $flatten\u_pong_pt1.\pg.$4\rgb[11:0] [6] $flatten\u_pong_pt1.\pg.$4\rgb[11:0] [4] $flatten\u_pong_pt1.\pg.$4\rgb[11:0] [2] $flatten\u_pong_pt1.\pg.$4\rgb[11:0] [0] }, Q = { \vectOut[1] [6] \vectOut[1] [4] \vectOut[1] [2] \vectOut[1] [0] }, rval = 4'0000).
Adding EN signal on $procdff$865 ($dff) from module pong_pt1_wrapper (D = { \u_pong_pt1.pixel_tick \hsync \vsync \rgb [11:8] }, Q = \vectOut[0] [6:0]).
Adding SRST signal on $auto$ff.cc:266:slice$889 ($dffe) from module pong_pt1_wrapper (D = { $flatten\u_pong_pt1.\pg.$2\rgb[11:0] [11] $flatten\u_pong_pt1.\pg.$2\rgb[11:0] [9] }, Q = { \vectOut[0] [3] \vectOut[0] [1] }, rval = 2'00).
Adding SRST signal on $auto$ff.cc:266:slice$889 ($dffe) from module pong_pt1_wrapper (D = { $flatten\u_pong_pt1.\pg.$4\rgb[11:0] [10] $flatten\u_pong_pt1.\pg.$4\rgb[11:0] [8] }, Q = { \vectOut[0] [2] \vectOut[0] [0] }, rval = 2'00).
Adding EN signal on $procdff$864 ($dff) from module pong_pt1_wrapper (D = $memrd$\stimIn$../../../pong_pt1_wrapper.v:54$23_DATA [0], Q = \down).
Adding EN signal on $procdff$863 ($dff) from module pong_pt1_wrapper (D = $memrd$\stimIn$../../../pong_pt1_wrapper.v:54$23_DATA [1], Q = \up).
Adding EN signal on $procdff$862 ($dff) from module pong_pt1_wrapper (D = $memrd$\stimIn$../../../pong_pt1_wrapper.v:54$23_DATA [2], Q = \reset).
Adding EN signal on $procdff$861 ($dff) from module pong_pt1_wrapper (D = $3$mem2reg_rd$\vectOut$../../../pong_pt1_wrapper.v:69$1_DATA[7:0]$31, Q = \Dout_emu).
Adding EN signal on $flatten\u_pong_pt1.\pg.$procdff$857 ($adff) from module pong_pt1_wrapper (D = \u_pong_pt1.pg.y_delta_next, Q = \u_pong_pt1.pg.y_delta_reg).
Adding EN signal on $flatten\u_pong_pt1.\pg.$procdff$856 ($adff) from module pong_pt1_wrapper (D = $flatten\u_pong_pt1.\pg.$3\x_delta_next[8:0], Q = \u_pong_pt1.pg.x_delta_reg).
Adding EN signal on $flatten\u_pong_pt1.\pg.$procdff$855 ($adff) from module pong_pt1_wrapper (D = $flatten\u_pong_pt1.\pg.$2\x_ball_next[8:0], Q = \u_pong_pt1.pg.x_ball_reg).
Adding EN signal on $flatten\u_pong_pt1.\pg.$procdff$854 ($adff) from module pong_pt1_wrapper (D = $flatten\u_pong_pt1.\pg.$add$../../../../source/pixel_gen.v:153$147_Y, Q = \u_pong_pt1.pg.y_ball_reg).
Adding EN signal on $flatten\u_pong_pt1.\pg.$procdff$853 ($adff) from module pong_pt1_wrapper (D = $flatten\u_pong_pt1.\pg.$2\y_pad_next[7:0], Q = \u_pong_pt1.pg.y_pad_reg).
Adding EN signal on $flatten\u_pong_pt1.$procdff$859 ($adff) from module pong_pt1_wrapper (D = $flatten\u_pong_pt1.$procmux$693_Y, Q = \u_pong_pt1.y).
Adding EN signal on $flatten\u_pong_pt1.$procdff$858 ($adff) from module pong_pt1_wrapper (D = $flatten\u_pong_pt1.$procmux$700_Y, Q = \u_pong_pt1.x).

5.8.7.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pong_pt1_wrapper..
Removed 24 unused cells and 23 unused wires.
<suppressed ~32 debug messages>

5.8.7.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pong_pt1_wrapper.
<suppressed ~3 debug messages>

5.8.7.9. Rerunning OPT passes. (Maybe there is more to do..)

5.8.7.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pong_pt1_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~16 debug messages>

5.8.7.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pong_pt1_wrapper.
Performed a total of 0 changes.

5.8.7.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pong_pt1_wrapper'.
<suppressed ~15 debug messages>
Removed a total of 5 cells.

5.8.7.13. Executing OPT_DFF pass (perform DFF optimizations).

5.8.7.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pong_pt1_wrapper..
Removed 0 unused cells and 5 unused wires.
<suppressed ~1 debug messages>

5.8.7.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module pong_pt1_wrapper.

5.8.7.16. Rerunning OPT passes. (Maybe there is more to do..)

5.8.7.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pong_pt1_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~16 debug messages>

5.8.7.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pong_pt1_wrapper.
Performed a total of 0 changes.

5.8.7.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pong_pt1_wrapper'.
Removed a total of 0 cells.

5.8.7.20. Executing OPT_DFF pass (perform DFF optimizations).

5.8.7.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pong_pt1_wrapper..

5.8.7.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module pong_pt1_wrapper.

5.8.7.23. Finished OPT passes. (There is nothing left to do.)

5.8.8. Executing WREDUCE pass (reducing word size of cells).
Removed top 3 address bits (of 3) from memory init port pong_pt1_wrapper.$auto$proc_memwr.cc:45:proc_memwr$875 (stimIn).
Removed top 29 address bits (of 32) from memory init port pong_pt1_wrapper.$flatten\u_pong_pt1.\pg.$auto$mem.cc:328:emit$507 ($flatten\u_pong_pt1.\pg.$auto$proc_rom.cc:155:do_switch$505).
Removed top 32 address bits (of 32) from memory read port pong_pt1_wrapper.$memrd$\stimIn$../../../pong_pt1_wrapper.v:54$23 (stimIn).
Removed cell pong_pt1_wrapper.$procmux$777 ($mux).
Removed top 31 bits (of 32) from mux cell pong_pt1_wrapper.$flatten\u_pong_pt1.\pg.$ternary$../../../../source/pixel_gen.v:39$109 ($mux).
Removed top 6 bits (of 9) from port A of cell pong_pt1_wrapper.$flatten\u_pong_pt1.\pg.$le$../../../../source/pixel_gen.v:114$112 ($le).
Removed top 5 bits (of 9) from port B of cell pong_pt1_wrapper.$flatten\u_pong_pt1.\pg.$le$../../../../source/pixel_gen.v:114$113 ($le).
Removed top 31 bits (of 32) from mux cell pong_pt1_wrapper.$flatten\u_pong_pt1.\pg.$ternary$../../../../source/pixel_gen.v:114$115 ($mux).
Removed top 3 bits (of 8) from port B of cell pong_pt1_wrapper.$flatten\u_pong_pt1.\pg.$add$../../../../source/pixel_gen.v:124$116 ($add).
Removed top 23 bits (of 32) from port Y of cell pong_pt1_wrapper.$flatten\u_pong_pt1.\pg.$add$../../../../source/pixel_gen.v:124$116 ($add).
Removed top 23 bits (of 32) from port A of cell pong_pt1_wrapper.$flatten\u_pong_pt1.\pg.$sub$../../../../source/pixel_gen.v:124$117 ($sub).
Removed top 31 bits (of 32) from port B of cell pong_pt1_wrapper.$flatten\u_pong_pt1.\pg.$sub$../../../../source/pixel_gen.v:124$117 ($sub).
Removed top 24 bits (of 32) from port Y of cell pong_pt1_wrapper.$flatten\u_pong_pt1.\pg.$sub$../../../../source/pixel_gen.v:124$117 ($sub).
Removed top 1 bits (of 9) from port A of cell pong_pt1_wrapper.$flatten\u_pong_pt1.\pg.$sub$../../../../source/pixel_gen.v:124$117 ($sub).
Removed top 2 bits (of 9) from port A of cell pong_pt1_wrapper.$flatten\u_pong_pt1.\pg.$le$../../../../source/pixel_gen.v:125$118 ($le).
Removed top 2 bits (of 9) from port B of cell pong_pt1_wrapper.$flatten\u_pong_pt1.\pg.$le$../../../../source/pixel_gen.v:125$119 ($le).
Removed top 7 bits (of 8) from port B of cell pong_pt1_wrapper.$flatten\u_pong_pt1.\pg.$gt$../../../../source/pixel_gen.v:132$126 ($gt).
Removed top 7 bits (of 8) from port B of cell pong_pt1_wrapper.$flatten\u_pong_pt1.\pg.$sub$../../../../source/pixel_gen.v:133$128 ($sub).
Removed top 2 bits (of 8) from port B of cell pong_pt1_wrapper.$flatten\u_pong_pt1.\pg.$lt$../../../../source/pixel_gen.v:134$129 ($lt).
Removed top 7 bits (of 8) from port B of cell pong_pt1_wrapper.$flatten\u_pong_pt1.\pg.$add$../../../../source/pixel_gen.v:135$131 ($add).
Removed top 28 bits (of 32) from port B of cell pong_pt1_wrapper.$flatten\u_pong_pt1.\pg.$add$../../../../source/pixel_gen.v:141$132 ($add).
Removed top 22 bits (of 32) from port Y of cell pong_pt1_wrapper.$flatten\u_pong_pt1.\pg.$add$../../../../source/pixel_gen.v:141$132 ($add).
Removed top 22 bits (of 32) from port A of cell pong_pt1_wrapper.$flatten\u_pong_pt1.\pg.$sub$../../../../source/pixel_gen.v:141$133 ($sub).
Removed top 31 bits (of 32) from port B of cell pong_pt1_wrapper.$flatten\u_pong_pt1.\pg.$sub$../../../../source/pixel_gen.v:141$133 ($sub).
Removed top 23 bits (of 32) from port Y of cell pong_pt1_wrapper.$flatten\u_pong_pt1.\pg.$sub$../../../../source/pixel_gen.v:141$133 ($sub).
Removed top 1 bits (of 10) from port A of cell pong_pt1_wrapper.$flatten\u_pong_pt1.\pg.$sub$../../../../source/pixel_gen.v:141$133 ($sub).
Removed top 28 bits (of 32) from port B of cell pong_pt1_wrapper.$flatten\u_pong_pt1.\pg.$add$../../../../source/pixel_gen.v:142$134 ($add).
Removed top 23 bits (of 32) from port Y of cell pong_pt1_wrapper.$flatten\u_pong_pt1.\pg.$add$../../../../source/pixel_gen.v:142$134 ($add).
Removed top 23 bits (of 32) from port A of cell pong_pt1_wrapper.$flatten\u_pong_pt1.\pg.$sub$../../../../source/pixel_gen.v:142$135 ($sub).
Removed top 31 bits (of 32) from port B of cell pong_pt1_wrapper.$flatten\u_pong_pt1.\pg.$sub$../../../../source/pixel_gen.v:142$135 ($sub).
Removed top 24 bits (of 32) from port Y of cell pong_pt1_wrapper.$flatten\u_pong_pt1.\pg.$sub$../../../../source/pixel_gen.v:142$135 ($sub).
Removed top 1 bits (of 9) from port A of cell pong_pt1_wrapper.$flatten\u_pong_pt1.\pg.$sub$../../../../source/pixel_gen.v:142$135 ($sub).
Removed top 1 bits (of 9) from port B of cell pong_pt1_wrapper.$flatten\u_pong_pt1.\pg.$gt$../../../../source/pixel_gen.v:160$151 ($gt).
Removed top 31 bits (of 32) from port B of cell pong_pt1_wrapper.$flatten\u_pong_pt1.\pg.$lt$../../../../source/pixel_gen.v:171$154 ($lt).
Removed top 2 bits (of 8) from port B of cell pong_pt1_wrapper.$flatten\u_pong_pt1.\pg.$gt$../../../../source/pixel_gen.v:173$155 ($gt).
Removed top 5 bits (of 9) from port B of cell pong_pt1_wrapper.$flatten\u_pong_pt1.\pg.$le$../../../../source/pixel_gen.v:175$156 ($le).
Removed top 2 bits (of 9) from port A of cell pong_pt1_wrapper.$flatten\u_pong_pt1.\pg.$le$../../../../source/pixel_gen.v:177$157 ($le).
Removed top 2 bits (of 9) from port B of cell pong_pt1_wrapper.$flatten\u_pong_pt1.\pg.$le$../../../../source/pixel_gen.v:178$158 ($le).
Removed top 1 bits (of 8) from port B of cell pong_pt1_wrapper.$flatten\u_pong_pt1.\pg.$eq$../../../../source/pixel_gen.v:39$106 ($eq).
Removed top 1 bits (of 8) from port B of cell pong_pt1_wrapper.$flatten\u_pong_pt1.$le$../../../../source/pong_pt1.v:64$44 ($le).
Removed top 1 bits (of 9) from port B of cell pong_pt1_wrapper.$flatten\u_pong_pt1.$le$../../../../source/pong_pt1.v:64$43 ($le).
Removed top 31 bits (of 32) from mux cell pong_pt1_wrapper.$flatten\u_pong_pt1.$ternary$../../../../source/pong_pt1.v:63$42 ($mux).
Removed top 1 bits (of 8) from port B of cell pong_pt1_wrapper.$flatten\u_pong_pt1.$eq$../../../../source/pong_pt1.v:63$41 ($eq).
Removed top 31 bits (of 32) from mux cell pong_pt1_wrapper.$flatten\u_pong_pt1.$ternary$../../../../source/pong_pt1.v:62$40 ($mux).
Removed top 1 bits (of 9) from port B of cell pong_pt1_wrapper.$flatten\u_pong_pt1.$eq$../../../../source/pong_pt1.v:62$39 ($eq).
Removed top 31 bits (of 32) from port B of cell pong_pt1_wrapper.$flatten\u_pong_pt1.$add$../../../../source/pong_pt1.v:58$38 ($add).
Removed top 23 bits (of 32) from port Y of cell pong_pt1_wrapper.$flatten\u_pong_pt1.$add$../../../../source/pong_pt1.v:58$38 ($add).
Removed top 31 bits (of 32) from port B of cell pong_pt1_wrapper.$flatten\u_pong_pt1.$add$../../../../source/pong_pt1.v:55$37 ($add).
Removed top 24 bits (of 32) from port Y of cell pong_pt1_wrapper.$flatten\u_pong_pt1.$add$../../../../source/pong_pt1.v:55$37 ($add).
Removed top 1 bits (of 8) from port B of cell pong_pt1_wrapper.$flatten\u_pong_pt1.$ge$../../../../source/pong_pt1.v:52$36 ($ge).
Removed top 1 bits (of 9) from port B of cell pong_pt1_wrapper.$flatten\u_pong_pt1.$ge$../../../../source/pong_pt1.v:49$35 ($ge).
Removed top 1 bits (of 9) from port Y of cell pong_pt1_wrapper.$flatten\u_pong_pt1.\pg.$add$../../../../source/pixel_gen.v:124$116 ($add).
Removed top 1 bits (of 10) from port Y of cell pong_pt1_wrapper.$flatten\u_pong_pt1.\pg.$add$../../../../source/pixel_gen.v:141$132 ($add).
Removed top 1 bits (of 9) from port Y of cell pong_pt1_wrapper.$flatten\u_pong_pt1.\pg.$add$../../../../source/pixel_gen.v:142$134 ($add).
Removed top 24 bits (of 32) from wire pong_pt1_wrapper.$flatten\u_pong_pt1.$add$../../../../source/pong_pt1.v:55$37_Y.
Removed top 23 bits (of 32) from wire pong_pt1_wrapper.$flatten\u_pong_pt1.$add$../../../../source/pong_pt1.v:58$38_Y.
Removed top 24 bits (of 32) from wire pong_pt1_wrapper.$flatten\u_pong_pt1.\pg.$add$../../../../source/pixel_gen.v:124$116_Y.
Removed top 23 bits (of 32) from wire pong_pt1_wrapper.$flatten\u_pong_pt1.\pg.$add$../../../../source/pixel_gen.v:141$132_Y.
Removed top 24 bits (of 32) from wire pong_pt1_wrapper.$flatten\u_pong_pt1.\pg.$add$../../../../source/pixel_gen.v:142$134_Y.

5.8.9. Executing PEEPOPT pass (run peephole optimizers).

5.8.10. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pong_pt1_wrapper..
Removed 1 unused cells and 14 unused wires.
<suppressed ~2 debug messages>

5.8.11. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module pong_pt1_wrapper:
  creating $macc model for $flatten\u_pong_pt1.$add$../../../../source/pong_pt1.v:55$37 ($add).
  creating $macc model for $flatten\u_pong_pt1.$add$../../../../source/pong_pt1.v:58$38 ($add).
  creating $macc model for $flatten\u_pong_pt1.\pg.$add$../../../../source/pixel_gen.v:124$116 ($add).
  creating $macc model for $flatten\u_pong_pt1.\pg.$add$../../../../source/pixel_gen.v:135$131 ($add).
  creating $macc model for $flatten\u_pong_pt1.\pg.$add$../../../../source/pixel_gen.v:141$132 ($add).
  creating $macc model for $flatten\u_pong_pt1.\pg.$add$../../../../source/pixel_gen.v:142$134 ($add).
  creating $macc model for $flatten\u_pong_pt1.\pg.$add$../../../../source/pixel_gen.v:153$147 ($add).
  creating $macc model for $flatten\u_pong_pt1.\pg.$add$../../../../source/pixel_gen.v:160$150 ($add).
  creating $macc model for $flatten\u_pong_pt1.\pg.$sub$../../../../source/pixel_gen.v:124$117 ($sub).
  creating $macc model for $flatten\u_pong_pt1.\pg.$sub$../../../../source/pixel_gen.v:133$128 ($sub).
  creating $macc model for $flatten\u_pong_pt1.\pg.$sub$../../../../source/pixel_gen.v:141$133 ($sub).
  creating $macc model for $flatten\u_pong_pt1.\pg.$sub$../../../../source/pixel_gen.v:142$135 ($sub).
  creating $macc model for $flatten\u_pong_pt1.\pg.$sub$../../../../source/pixel_gen.v:147$143 ($sub).
  creating $macc model for $flatten\u_pong_pt1.\pg.$sub$../../../../source/pixel_gen.v:148$144 ($sub).
  merging $macc model for $flatten\u_pong_pt1.\pg.$add$../../../../source/pixel_gen.v:142$134 into $flatten\u_pong_pt1.\pg.$sub$../../../../source/pixel_gen.v:142$135.
  merging $macc model for $flatten\u_pong_pt1.\pg.$add$../../../../source/pixel_gen.v:141$132 into $flatten\u_pong_pt1.\pg.$sub$../../../../source/pixel_gen.v:141$133.
  merging $macc model for $flatten\u_pong_pt1.\pg.$add$../../../../source/pixel_gen.v:124$116 into $flatten\u_pong_pt1.\pg.$sub$../../../../source/pixel_gen.v:124$117.
  creating $alu model for $macc $flatten\u_pong_pt1.\pg.$sub$../../../../source/pixel_gen.v:133$128.
  creating $alu model for $macc $flatten\u_pong_pt1.\pg.$add$../../../../source/pixel_gen.v:160$150.
  creating $alu model for $macc $flatten\u_pong_pt1.\pg.$add$../../../../source/pixel_gen.v:153$147.
  creating $alu model for $macc $flatten\u_pong_pt1.\pg.$sub$../../../../source/pixel_gen.v:147$143.
  creating $alu model for $macc $flatten\u_pong_pt1.\pg.$add$../../../../source/pixel_gen.v:135$131.
  creating $alu model for $macc $flatten\u_pong_pt1.\pg.$sub$../../../../source/pixel_gen.v:148$144.
  creating $alu model for $macc $flatten\u_pong_pt1.$add$../../../../source/pong_pt1.v:58$38.
  creating $alu model for $macc $flatten\u_pong_pt1.$add$../../../../source/pong_pt1.v:55$37.
  creating $macc cell for $flatten\u_pong_pt1.\pg.$sub$../../../../source/pixel_gen.v:124$117: $auto$alumacc.cc:365:replace_macc$939
  creating $macc cell for $flatten\u_pong_pt1.\pg.$sub$../../../../source/pixel_gen.v:142$135: $auto$alumacc.cc:365:replace_macc$940
  creating $macc cell for $flatten\u_pong_pt1.\pg.$sub$../../../../source/pixel_gen.v:141$133: $auto$alumacc.cc:365:replace_macc$941
  creating $alu model for $flatten\u_pong_pt1.$ge$../../../../source/pong_pt1.v:49$35 ($ge): new $alu
  creating $alu model for $flatten\u_pong_pt1.$ge$../../../../source/pong_pt1.v:52$36 ($ge): new $alu
  creating $alu model for $flatten\u_pong_pt1.$le$../../../../source/pong_pt1.v:64$43 ($le): new $alu
  creating $alu model for $flatten\u_pong_pt1.$le$../../../../source/pong_pt1.v:64$44 ($le): new $alu
  creating $alu model for $flatten\u_pong_pt1.\pg.$gt$../../../../source/pixel_gen.v:132$126 ($gt): new $alu
  creating $alu model for $flatten\u_pong_pt1.\pg.$gt$../../../../source/pixel_gen.v:160$151 ($gt): new $alu
  creating $alu model for $flatten\u_pong_pt1.\pg.$gt$../../../../source/pixel_gen.v:173$155 ($gt): new $alu
  creating $alu model for $flatten\u_pong_pt1.\pg.$le$../../../../source/pixel_gen.v:114$112 ($le): new $alu
  creating $alu model for $flatten\u_pong_pt1.\pg.$le$../../../../source/pixel_gen.v:114$113 ($le): new $alu
  creating $alu model for $flatten\u_pong_pt1.\pg.$le$../../../../source/pixel_gen.v:125$118 ($le): new $alu
  creating $alu model for $flatten\u_pong_pt1.\pg.$le$../../../../source/pixel_gen.v:125$119 ($le): new $alu
  creating $alu model for $flatten\u_pong_pt1.\pg.$le$../../../../source/pixel_gen.v:126$121 ($le): new $alu
  creating $alu model for $flatten\u_pong_pt1.\pg.$le$../../../../source/pixel_gen.v:126$123 ($le): new $alu
  creating $alu model for $flatten\u_pong_pt1.\pg.$le$../../../../source/pixel_gen.v:144$136 ($le): new $alu
  creating $alu model for $flatten\u_pong_pt1.\pg.$le$../../../../source/pixel_gen.v:144$137 ($le): new $alu
  creating $alu model for $flatten\u_pong_pt1.\pg.$le$../../../../source/pixel_gen.v:145$139 ($le): new $alu
  creating $alu model for $flatten\u_pong_pt1.\pg.$le$../../../../source/pixel_gen.v:145$141 ($le): new $alu
  creating $alu model for $flatten\u_pong_pt1.\pg.$le$../../../../source/pixel_gen.v:175$156 ($le): new $alu
  creating $alu model for $flatten\u_pong_pt1.\pg.$le$../../../../source/pixel_gen.v:177$157 ($le): new $alu
  creating $alu model for $flatten\u_pong_pt1.\pg.$le$../../../../source/pixel_gen.v:178$158 ($le): new $alu
  creating $alu model for $flatten\u_pong_pt1.\pg.$le$../../../../source/pixel_gen.v:179$160 ($le): new $alu
  creating $alu model for $flatten\u_pong_pt1.\pg.$le$../../../../source/pixel_gen.v:180$162 ($le): new $alu
  creating $alu model for $flatten\u_pong_pt1.\pg.$lt$../../../../source/pixel_gen.v:134$129 ($lt): new $alu
  creating $alu model for $flatten\u_pong_pt1.\pg.$lt$../../../../source/pixel_gen.v:171$154 ($lt): new $alu
  creating $alu model for $flatten\u_pong_pt1.$eq$../../../../source/pong_pt1.v:62$39 ($eq): merged with $flatten\u_pong_pt1.$ge$../../../../source/pong_pt1.v:49$35.
  creating $alu model for $flatten\u_pong_pt1.$eq$../../../../source/pong_pt1.v:63$41 ($eq): merged with $flatten\u_pong_pt1.$ge$../../../../source/pong_pt1.v:52$36.
  creating $alu cell for $flatten\u_pong_pt1.\pg.$lt$../../../../source/pixel_gen.v:171$154: $auto$alumacc.cc:485:replace_alu$966
  creating $alu cell for $flatten\u_pong_pt1.\pg.$lt$../../../../source/pixel_gen.v:134$129: $auto$alumacc.cc:485:replace_alu$977
  creating $alu cell for $flatten\u_pong_pt1.\pg.$le$../../../../source/pixel_gen.v:180$162: $auto$alumacc.cc:485:replace_alu$988
  creating $alu cell for $flatten\u_pong_pt1.\pg.$le$../../../../source/pixel_gen.v:179$160: $auto$alumacc.cc:485:replace_alu$1001
  creating $alu cell for $flatten\u_pong_pt1.\pg.$le$../../../../source/pixel_gen.v:178$158: $auto$alumacc.cc:485:replace_alu$1010
  creating $alu cell for $flatten\u_pong_pt1.\pg.$le$../../../../source/pixel_gen.v:177$157: $auto$alumacc.cc:485:replace_alu$1023
  creating $alu cell for $flatten\u_pong_pt1.\pg.$le$../../../../source/pixel_gen.v:175$156: $auto$alumacc.cc:485:replace_alu$1032
  creating $alu cell for $flatten\u_pong_pt1.\pg.$le$../../../../source/pixel_gen.v:145$141: $auto$alumacc.cc:485:replace_alu$1045
  creating $alu cell for $flatten\u_pong_pt1.\pg.$le$../../../../source/pixel_gen.v:145$139: $auto$alumacc.cc:485:replace_alu$1054
  creating $alu cell for $flatten\u_pong_pt1.\pg.$le$../../../../source/pixel_gen.v:144$137: $auto$alumacc.cc:485:replace_alu$1067
  creating $alu cell for $flatten\u_pong_pt1.\pg.$le$../../../../source/pixel_gen.v:144$136: $auto$alumacc.cc:485:replace_alu$1076
  creating $alu cell for $flatten\u_pong_pt1.\pg.$le$../../../../source/pixel_gen.v:126$123: $auto$alumacc.cc:485:replace_alu$1089
  creating $alu cell for $flatten\u_pong_pt1.\pg.$le$../../../../source/pixel_gen.v:126$121: $auto$alumacc.cc:485:replace_alu$1098
  creating $alu cell for $flatten\u_pong_pt1.\pg.$le$../../../../source/pixel_gen.v:125$119: $auto$alumacc.cc:485:replace_alu$1111
  creating $alu cell for $flatten\u_pong_pt1.\pg.$le$../../../../source/pixel_gen.v:125$118: $auto$alumacc.cc:485:replace_alu$1124
  creating $alu cell for $flatten\u_pong_pt1.\pg.$le$../../../../source/pixel_gen.v:114$113: $auto$alumacc.cc:485:replace_alu$1133
  creating $alu cell for $flatten\u_pong_pt1.\pg.$le$../../../../source/pixel_gen.v:114$112: $auto$alumacc.cc:485:replace_alu$1146
  creating $alu cell for $flatten\u_pong_pt1.\pg.$gt$../../../../source/pixel_gen.v:173$155: $auto$alumacc.cc:485:replace_alu$1155
  creating $alu cell for $flatten\u_pong_pt1.\pg.$gt$../../../../source/pixel_gen.v:160$151: $auto$alumacc.cc:485:replace_alu$1160
  creating $alu cell for $flatten\u_pong_pt1.$le$../../../../source/pong_pt1.v:64$44: $auto$alumacc.cc:485:replace_alu$1165
  creating $alu cell for $flatten\u_pong_pt1.$le$../../../../source/pong_pt1.v:64$43: $auto$alumacc.cc:485:replace_alu$1178
  creating $alu cell for $flatten\u_pong_pt1.$ge$../../../../source/pong_pt1.v:52$36, $flatten\u_pong_pt1.$eq$../../../../source/pong_pt1.v:63$41: $auto$alumacc.cc:485:replace_alu$1191
  creating $alu cell for $flatten\u_pong_pt1.$ge$../../../../source/pong_pt1.v:49$35, $flatten\u_pong_pt1.$eq$../../../../source/pong_pt1.v:62$39: $auto$alumacc.cc:485:replace_alu$1200
  creating $alu cell for $flatten\u_pong_pt1.$add$../../../../source/pong_pt1.v:55$37: $auto$alumacc.cc:485:replace_alu$1209
  creating $alu cell for $flatten\u_pong_pt1.$add$../../../../source/pong_pt1.v:58$38: $auto$alumacc.cc:485:replace_alu$1212
  creating $alu cell for $flatten\u_pong_pt1.\pg.$sub$../../../../source/pixel_gen.v:148$144: $auto$alumacc.cc:485:replace_alu$1215
  creating $alu cell for $flatten\u_pong_pt1.\pg.$gt$../../../../source/pixel_gen.v:132$126: $auto$alumacc.cc:485:replace_alu$1218
  creating $alu cell for $flatten\u_pong_pt1.\pg.$add$../../../../source/pixel_gen.v:135$131: $auto$alumacc.cc:485:replace_alu$1223
  creating $alu cell for $flatten\u_pong_pt1.\pg.$sub$../../../../source/pixel_gen.v:147$143: $auto$alumacc.cc:485:replace_alu$1226
  creating $alu cell for $flatten\u_pong_pt1.\pg.$add$../../../../source/pixel_gen.v:153$147: $auto$alumacc.cc:485:replace_alu$1229
  creating $alu cell for $flatten\u_pong_pt1.\pg.$add$../../../../source/pixel_gen.v:160$150: $auto$alumacc.cc:485:replace_alu$1232
  creating $alu cell for $flatten\u_pong_pt1.\pg.$sub$../../../../source/pixel_gen.v:133$128: $auto$alumacc.cc:485:replace_alu$1235
  created 32 $alu and 3 $macc cells.

5.8.12. Executing SHARE pass (SAT-based resource sharing).

5.8.13. Executing OPT pass (performing simple optimizations).

5.8.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pong_pt1_wrapper.
<suppressed ~5 debug messages>

5.8.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pong_pt1_wrapper'.
Removed a total of 0 cells.

5.8.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pong_pt1_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~15 debug messages>

5.8.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pong_pt1_wrapper.
Performed a total of 0 changes.

5.8.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pong_pt1_wrapper'.
Removed a total of 0 cells.

5.8.13.6. Executing OPT_DFF pass (perform DFF optimizations).

5.8.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pong_pt1_wrapper..
Removed 4 unused cells and 32 unused wires.
<suppressed ~5 debug messages>

5.8.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pong_pt1_wrapper.

5.8.13.9. Rerunning OPT passes. (Maybe there is more to do..)

5.8.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pong_pt1_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~15 debug messages>

5.8.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pong_pt1_wrapper.
Performed a total of 0 changes.

5.8.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pong_pt1_wrapper'.
Removed a total of 0 cells.

5.8.13.13. Executing OPT_DFF pass (perform DFF optimizations).

5.8.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pong_pt1_wrapper..

5.8.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module pong_pt1_wrapper.

5.8.13.16. Finished OPT passes. (There is nothing left to do.)

5.8.14. Executing MEMORY pass.

5.8.14.1. Executing OPT_MEM pass (optimize memories).
pong_pt1_wrapper.$flatten\u_pong_pt1.\pg.$auto$proc_rom.cc:155:do_switch$505: removing const-1 lane 2
pong_pt1_wrapper.$flatten\u_pong_pt1.\pg.$auto$proc_rom.cc:155:do_switch$505: removing const-1 lane 3
pong_pt1_wrapper.$flatten\u_pong_pt1.\pg.$auto$proc_rom.cc:155:do_switch$505: removing const-1 lane 4
pong_pt1_wrapper.$flatten\u_pong_pt1.\pg.$auto$proc_rom.cc:155:do_switch$505: removing const-1 lane 5
Performed a total of 1 transformations.

5.8.14.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

5.8.14.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).
  Analyzing pong_pt1_wrapper.stimIn write port 0.

5.8.14.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

5.8.14.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `$flatten\u_pong_pt1.\pg.$auto$proc_rom.cc:155:do_switch$505'[0] in module `\pong_pt1_wrapper': no output FF found.
Checking read port `\stimIn'[0] in module `\pong_pt1_wrapper': merging output FF to cell.
    Write port 0: don't care on collision.
Checking read port address `$flatten\u_pong_pt1.\pg.$auto$proc_rom.cc:155:do_switch$505'[0] in module `\pong_pt1_wrapper': no address FF found.

5.8.14.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pong_pt1_wrapper..
Removed 3 unused cells and 3 unused wires.
<suppressed ~4 debug messages>

5.8.14.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

5.8.14.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

5.8.14.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pong_pt1_wrapper..

5.8.14.10. Executing MEMORY_COLLECT pass (generating $mem cells).

5.8.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pong_pt1_wrapper..

5.9. Executing MEMORY_LIBMAP pass (mapping memories to cells).
using FF mapping for memory pong_pt1_wrapper.$flatten\u_pong_pt1.\pg.$auto$proc_rom.cc:155:do_switch$505
using FF mapping for memory pong_pt1_wrapper.stimIn
<suppressed ~641 debug messages>

5.10. Executing TECHMAP pass (map to technology primitives).

5.10.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/gowin/lutrams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/gowin/lutrams_map.v' to AST representation.
Generating RTLIL representation for module `\$__GOWIN_LUTRAM_'.
Successfully finished Verilog frontend.

5.10.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/gowin/brams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/gowin/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__GOWIN_SP_'.
Generating RTLIL representation for module `\$__GOWIN_DP_'.
Generating RTLIL representation for module `\$__GOWIN_SDP_'.
Successfully finished Verilog frontend.

5.10.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~6 debug messages>

5.11. Executing OPT pass (performing simple optimizations).

5.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pong_pt1_wrapper.
<suppressed ~14 debug messages>

5.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pong_pt1_wrapper'.
Removed a total of 0 cells.

5.11.3. Executing OPT_DFF pass (perform DFF optimizations).

5.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pong_pt1_wrapper..
Removed 9 unused cells and 18 unused wires.
<suppressed ~10 debug messages>

5.11.5. Finished fast OPT passes.

5.12. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory $flatten\u_pong_pt1.\pg.$auto$proc_rom.cc:155:do_switch$505 in module \pong_pt1_wrapper:
  created 8 $dff cells and 0 static cells of width 4.
  read interface: 0 $dff and 7 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory \stimIn in module \pong_pt1_wrapper:
  created 1 $dff cells and 0 static cells of width 8.
Extracted data FF from read port 0 of pong_pt1_wrapper.stimIn: $\stimIn$rdreg[0]
  read interface: 1 $dff and 0 $mux cells.
  write interface: 1 write mux blocks.

5.13. Executing OPT pass (performing simple optimizations).

5.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pong_pt1_wrapper.
<suppressed ~4 debug messages>

5.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pong_pt1_wrapper'.
Removed a total of 0 cells.

5.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pong_pt1_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~13 debug messages>

5.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pong_pt1_wrapper.
    Consolidated identical input bits for $mux cell $memory$flatten\u_pong_pt1.\pg.$auto$proc_rom.cc:155:do_switch$505$rdmux[0][2][0]$1470:
      Old ports: A=4'0000, B=4'0110, Y=$memory$flatten\u_pong_pt1.\pg.$auto$proc_rom.cc:155:do_switch$505$rdmux[0][1][0]$a$1465
      New ports: A=1'0, B=1'1, Y=$memory$flatten\u_pong_pt1.\pg.$auto$proc_rom.cc:155:do_switch$505$rdmux[0][1][0]$a$1465 [1]
      New connections: { $memory$flatten\u_pong_pt1.\pg.$auto$proc_rom.cc:155:do_switch$505$rdmux[0][1][0]$a$1465 [3:2] $memory$flatten\u_pong_pt1.\pg.$auto$proc_rom.cc:155:do_switch$505$rdmux[0][1][0]$a$1465 [0] } = { 1'0 $memory$flatten\u_pong_pt1.\pg.$auto$proc_rom.cc:155:do_switch$505$rdmux[0][1][0]$a$1465 [1] 1'0 }
    Consolidated identical input bits for $mux cell $memory$flatten\u_pong_pt1.\pg.$auto$proc_rom.cc:155:do_switch$505$rdmux[0][2][3]$1479:
      Old ports: A=4'0110, B=4'0000, Y=$memory$flatten\u_pong_pt1.\pg.$auto$proc_rom.cc:155:do_switch$505$rdmux[0][1][1]$b$1469
      New ports: A=1'1, B=1'0, Y=$memory$flatten\u_pong_pt1.\pg.$auto$proc_rom.cc:155:do_switch$505$rdmux[0][1][1]$b$1469 [1]
      New connections: { $memory$flatten\u_pong_pt1.\pg.$auto$proc_rom.cc:155:do_switch$505$rdmux[0][1][1]$b$1469 [3:2] $memory$flatten\u_pong_pt1.\pg.$auto$proc_rom.cc:155:do_switch$505$rdmux[0][1][1]$b$1469 [0] } = { 1'0 $memory$flatten\u_pong_pt1.\pg.$auto$proc_rom.cc:155:do_switch$505$rdmux[0][1][1]$b$1469 [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\u_pong_pt1.\pg.$procmux$595:
      Old ports: A=12'000100010001, B=12'111111111111, Y=$flatten\u_pong_pt1.\pg.$4\rgb[11:0]
      New ports: A=1'0, B=1'1, Y=$flatten\u_pong_pt1.\pg.$4\rgb[11:0] [1]
      New connections: { $flatten\u_pong_pt1.\pg.$4\rgb[11:0] [11:2] $flatten\u_pong_pt1.\pg.$4\rgb[11:0] [0] } = { $flatten\u_pong_pt1.\pg.$4\rgb[11:0] [1] $flatten\u_pong_pt1.\pg.$4\rgb[11:0] [1] $flatten\u_pong_pt1.\pg.$4\rgb[11:0] [1] 1'1 $flatten\u_pong_pt1.\pg.$4\rgb[11:0] [1] $flatten\u_pong_pt1.\pg.$4\rgb[11:0] [1] $flatten\u_pong_pt1.\pg.$4\rgb[11:0] [1] 1'1 $flatten\u_pong_pt1.\pg.$4\rgb[11:0] [1] $flatten\u_pong_pt1.\pg.$4\rgb[11:0] [1] 1'1 }
    Consolidated identical input bits for $mux cell $flatten\u_pong_pt1.\pg.$procmux$637:
      Old ports: A=9'111111111, B=9'000000001, Y=$flatten\u_pong_pt1.\pg.$3\x_delta_next[8:0]
      New ports: A=1'1, B=1'0, Y=$flatten\u_pong_pt1.\pg.$3\x_delta_next[8:0] [1]
      New connections: { $flatten\u_pong_pt1.\pg.$3\x_delta_next[8:0] [8:2] $flatten\u_pong_pt1.\pg.$3\x_delta_next[8:0] [0] } = { $flatten\u_pong_pt1.\pg.$3\x_delta_next[8:0] [1] $flatten\u_pong_pt1.\pg.$3\x_delta_next[8:0] [1] $flatten\u_pong_pt1.\pg.$3\x_delta_next[8:0] [1] $flatten\u_pong_pt1.\pg.$3\x_delta_next[8:0] [1] $flatten\u_pong_pt1.\pg.$3\x_delta_next[8:0] [1] $flatten\u_pong_pt1.\pg.$3\x_delta_next[8:0] [1] $flatten\u_pong_pt1.\pg.$3\x_delta_next[8:0] [1] 1'1 }
    Consolidated identical input bits for $mux cell $flatten\u_pong_pt1.\pg.$procmux$658:
      Old ports: A=8'00000001, B=8'11111111, Y=\u_pong_pt1.pg.y_delta_next
      New ports: A=1'0, B=1'1, Y=\u_pong_pt1.pg.y_delta_next [1]
      New connections: { \u_pong_pt1.pg.y_delta_next [7:2] \u_pong_pt1.pg.y_delta_next [0] } = { \u_pong_pt1.pg.y_delta_next [1] \u_pong_pt1.pg.y_delta_next [1] \u_pong_pt1.pg.y_delta_next [1] \u_pong_pt1.pg.y_delta_next [1] \u_pong_pt1.pg.y_delta_next [1] \u_pong_pt1.pg.y_delta_next [1] 1'1 }
  Optimizing cells in module \pong_pt1_wrapper.
    Consolidated identical input bits for $mux cell $memory$flatten\u_pong_pt1.\pg.$auto$proc_rom.cc:155:do_switch$505$rdmux[0][1][1]$1467:
      Old ports: A=4'1111, B=$memory$flatten\u_pong_pt1.\pg.$auto$proc_rom.cc:155:do_switch$505$rdmux[0][1][1]$b$1469, Y=$memory$flatten\u_pong_pt1.\pg.$auto$proc_rom.cc:155:do_switch$505$rdmux[0][0][0]$b$1463
      New ports: A=2'11, B={ $memory$flatten\u_pong_pt1.\pg.$auto$proc_rom.cc:155:do_switch$505$rdmux[0][1][1]$b$1469 [1] 1'0 }, Y=$memory$flatten\u_pong_pt1.\pg.$auto$proc_rom.cc:155:do_switch$505$rdmux[0][0][0]$b$1463 [1:0]
      New connections: $memory$flatten\u_pong_pt1.\pg.$auto$proc_rom.cc:155:do_switch$505$rdmux[0][0][0]$b$1463 [3:2] = { $memory$flatten\u_pong_pt1.\pg.$auto$proc_rom.cc:155:do_switch$505$rdmux[0][0][0]$b$1463 [0] $memory$flatten\u_pong_pt1.\pg.$auto$proc_rom.cc:155:do_switch$505$rdmux[0][0][0]$b$1463 [1] }
    Consolidated identical input bits for $mux cell $memory$flatten\u_pong_pt1.\pg.$auto$proc_rom.cc:155:do_switch$505$rdmux[0][1][0]$1464:
      Old ports: A=$memory$flatten\u_pong_pt1.\pg.$auto$proc_rom.cc:155:do_switch$505$rdmux[0][1][0]$a$1465, B=4'1111, Y=$memory$flatten\u_pong_pt1.\pg.$auto$proc_rom.cc:155:do_switch$505$rdmux[0][0][0]$a$1462
      New ports: A={ $memory$flatten\u_pong_pt1.\pg.$auto$proc_rom.cc:155:do_switch$505$rdmux[0][1][0]$a$1465 [1] 1'0 }, B=2'11, Y=$memory$flatten\u_pong_pt1.\pg.$auto$proc_rom.cc:155:do_switch$505$rdmux[0][0][0]$a$1462 [1:0]
      New connections: $memory$flatten\u_pong_pt1.\pg.$auto$proc_rom.cc:155:do_switch$505$rdmux[0][0][0]$a$1462 [3:2] = { $memory$flatten\u_pong_pt1.\pg.$auto$proc_rom.cc:155:do_switch$505$rdmux[0][0][0]$a$1462 [0] $memory$flatten\u_pong_pt1.\pg.$auto$proc_rom.cc:155:do_switch$505$rdmux[0][0][0]$a$1462 [1] }
    Consolidated identical input bits for $mux cell $flatten\u_pong_pt1.\pg.$procmux$607:
      Old ports: A=$flatten\u_pong_pt1.\pg.$4\rgb[11:0], B=12'101010101010, Y=$flatten\u_pong_pt1.\pg.$3\rgb[11:0]
      New ports: A={ $flatten\u_pong_pt1.\pg.$4\rgb[11:0] [1] $flatten\u_pong_pt1.\pg.$4\rgb[11:0] [1] 1'1 }, B=3'010, Y=$flatten\u_pong_pt1.\pg.$3\rgb[11:0] [2:0]
      New connections: $flatten\u_pong_pt1.\pg.$3\rgb[11:0] [11:3] = { $flatten\u_pong_pt1.\pg.$3\rgb[11:0] [1] $flatten\u_pong_pt1.\pg.$3\rgb[11:0] [2:0] $flatten\u_pong_pt1.\pg.$3\rgb[11:0] [1] $flatten\u_pong_pt1.\pg.$3\rgb[11:0] [2:0] $flatten\u_pong_pt1.\pg.$3\rgb[11:0] [1] }
  Optimizing cells in module \pong_pt1_wrapper.
    Consolidated identical input bits for $mux cell $memory$flatten\u_pong_pt1.\pg.$auto$proc_rom.cc:155:do_switch$505$rdmux[0][0][0]$1461:
      Old ports: A=$memory$flatten\u_pong_pt1.\pg.$auto$proc_rom.cc:155:do_switch$505$rdmux[0][0][0]$a$1462, B=$memory$flatten\u_pong_pt1.\pg.$auto$proc_rom.cc:155:do_switch$505$rdmux[0][0][0]$b$1463, Y={ \u_pong_pt1.pg.rom_data [7:6] \u_pong_pt1.pg.rom_data [1:0] }
      New ports: A=$memory$flatten\u_pong_pt1.\pg.$auto$proc_rom.cc:155:do_switch$505$rdmux[0][0][0]$a$1462 [1:0], B=$memory$flatten\u_pong_pt1.\pg.$auto$proc_rom.cc:155:do_switch$505$rdmux[0][0][0]$b$1463 [1:0], Y=\u_pong_pt1.pg.rom_data [1:0]
      New connections: \u_pong_pt1.pg.rom_data [7:6] = { \u_pong_pt1.pg.rom_data [0] \u_pong_pt1.pg.rom_data [1] }
    Consolidated identical input bits for $mux cell $flatten\u_pong_pt1.\pg.$procmux$616:
      Old ports: A=$flatten\u_pong_pt1.\pg.$3\rgb[11:0], B=12'101010101010, Y=$flatten\u_pong_pt1.\pg.$2\rgb[11:0]
      New ports: A=$flatten\u_pong_pt1.\pg.$3\rgb[11:0] [2:0], B=3'010, Y=$flatten\u_pong_pt1.\pg.$2\rgb[11:0] [2:0]
      New connections: $flatten\u_pong_pt1.\pg.$2\rgb[11:0] [11:3] = { $flatten\u_pong_pt1.\pg.$2\rgb[11:0] [1] $flatten\u_pong_pt1.\pg.$2\rgb[11:0] [2:0] $flatten\u_pong_pt1.\pg.$2\rgb[11:0] [1] $flatten\u_pong_pt1.\pg.$2\rgb[11:0] [2:0] $flatten\u_pong_pt1.\pg.$2\rgb[11:0] [1] }
  Optimizing cells in module \pong_pt1_wrapper.
Performed a total of 10 changes.

5.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pong_pt1_wrapper'.
Removed a total of 0 cells.

5.13.6. Executing OPT_DFF pass (perform DFF optimizations).

5.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pong_pt1_wrapper..
Removed 0 unused cells and 14 unused wires.
<suppressed ~1 debug messages>

5.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pong_pt1_wrapper.

5.13.9. Rerunning OPT passes. (Maybe there is more to do..)

5.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pong_pt1_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~13 debug messages>

5.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pong_pt1_wrapper.
Performed a total of 0 changes.

5.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pong_pt1_wrapper'.
Removed a total of 0 cells.

5.13.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $memory\stimIn[0]$1482 ($dff) from module pong_pt1_wrapper (D = \Din_emu, Q = \stimIn[0]).

5.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pong_pt1_wrapper..
Removed 1 unused cells and 1 unused wires.
<suppressed ~2 debug messages>

5.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module pong_pt1_wrapper.

5.13.16. Rerunning OPT passes. (Maybe there is more to do..)

5.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pong_pt1_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~12 debug messages>

5.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pong_pt1_wrapper.
Performed a total of 0 changes.

5.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pong_pt1_wrapper'.
Removed a total of 0 cells.

5.13.20. Executing OPT_DFF pass (perform DFF optimizations).

5.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pong_pt1_wrapper..

5.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module pong_pt1_wrapper.

5.13.23. Finished OPT passes. (There is nothing left to do.)

5.14. Executing TECHMAP pass (map to technology primitives).

5.14.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

5.14.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $not.
Using template $paramod$38e8498ccdc425801fe5312e427e3cf0d9089c58\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $sdffce.
Using extmapper maccmap for cells of type $macc.
  add \u_pong_pt1.pg.y_pad_reg (8 bits, unsigned)
  add 8'00001111 (8 bits, unsigned)
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $logic_and.
Using template $paramod$d1615bf4e5e328245ffd1550e5fe105901cda77b\_90_alu for cells of type $alu.
Using template $paramod$c6b63e723603573fdc33dc74600fd0455fbbc6dc\_90_alu for cells of type $alu.
  add \u_pong_pt1.pg.y_ball_reg (8 bits, unsigned)
  add 8'00000111 (8 bits, unsigned)
Using template $paramod$4e7ab332c4f4e7e4c8a648a6a417480f7ed6e86d\_90_alu for cells of type $alu.
Using template $paramod$ea139abf5d9f33c5a8f110be2ae0a1d01adc5fd6\_90_alu for cells of type $alu.
Using template $paramod$a1bc51c02ce12ac21eb18988e83292af48ed7d72\_90_alu for cells of type $alu.
Using template $paramod$c3cd1564c35d873179656addd6052d7ea8b6d991\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $and.
Using template $paramod$78e969f2586efcf3a5b0b0440bcca0db83d5cca2\_90_alu for cells of type $alu.
  add \u_pong_pt1.pg.x_ball_reg (9 bits, unsigned)
  add 9'000000111 (9 bits, unsigned)
Using template $paramod$d2fa05d38998afabc6d4f34471305d0af4b8b2df\_90_alu for cells of type $alu.
Using template $paramod$constmap:676810fae7754c88d38a6f400e4f8aa61a195c6b$paramod$92adee9538f2381d8e5006822c900eb986d754e8\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod$403a3c2fa431a154c52a6a5429d7a6260b5d144f\_90_alu for cells of type $alu.
Using template $paramod$dfca81329cbbac01700318224209a5f2318c7128\_90_alu for cells of type $alu.
Using template $paramod$150d098cb9cca1819459bc5073194c8c53d2862d\_90_alu for cells of type $alu.
Using template $paramod$78464f9f65d57061f7490f3fe5dd257e4a61e2b7\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $eq.
Using template $paramod$53700bbee849b2010ad0b60a61ccd204a10e24ca\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu_brent_kung\WIDTH=32'00000000000000000000000000001001 for cells of type $lcu.
Using template $paramod\_90_lcu_brent_kung\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu_brent_kung\WIDTH=32'00000000000000000000000000000111 for cells of type $lcu.
Using template $paramod\_90_lcu_brent_kung\WIDTH=32'00000000000000000000000000001000 for cells of type $lcu.
Using template $paramod\_90_lcu_brent_kung\WIDTH=32'00000000000000000000000000000011 for cells of type $lcu.
No more expansions possible.
<suppressed ~2429 debug messages>

5.15. Executing OPT pass (performing simple optimizations).

5.15.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pong_pt1_wrapper.
<suppressed ~1109 debug messages>

5.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pong_pt1_wrapper'.
<suppressed ~1308 debug messages>
Removed a total of 436 cells.

5.15.3. Executing OPT_DFF pass (perform DFF optimizations).

5.15.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pong_pt1_wrapper..
Removed 368 unused cells and 1527 unused wires.
<suppressed ~369 debug messages>

5.15.5. Finished fast OPT passes.

5.16. Executing IOPADMAP pass (mapping inputs/outputs to IO-PAD cells).
Mapping port pong_pt1_wrapper.Addr_emu using IBUF.
Mapping port pong_pt1_wrapper.Din_emu using IBUF.
Mapping port pong_pt1_wrapper.Dout_emu using OBUF.
Mapping port pong_pt1_wrapper.clk_dut using IBUF.
Mapping port pong_pt1_wrapper.clk_emu using IBUF.
Mapping port pong_pt1_wrapper.get_emu using IBUF.
Mapping port pong_pt1_wrapper.load_emu using IBUF.

5.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pong_pt1_wrapper..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

5.18. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

5.19. Executing TECHMAP pass (map to technology primitives).

5.19.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/gowin/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/gowin/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

5.19.2. Continuing TECHMAP pass.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_DFFE_PP1P_ for cells of type $_DFFE_PP1P_.
Using template \$_SDFFE_PP0P_ for cells of type $_SDFFE_PP0P_.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
No more expansions possible.
<suppressed ~91 debug messages>

5.20. Executing OPT_EXPR pass (perform const folding).
Optimizing module pong_pt1_wrapper.
<suppressed ~8 debug messages>

5.21. Executing SIMPLEMAP pass (map simple cells to gate primitives).

5.22. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/abc9_model.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/abc9_model.v' to AST representation.
Generating RTLIL representation for module `$__ABC9_DELAY'.
Generating RTLIL representation for module `$__ABC9_SCC_BREAKER'.
Generating RTLIL representation for module `$__DFF_N__$abc9_flop'.
Generating RTLIL representation for module `$__DFF_P__$abc9_flop'.
Successfully finished Verilog frontend.

5.23. Executing ABC9 pass.

5.23.1. Executing ABC9_OPS pass (helper functions for ABC9).

5.23.2. Executing ABC9_OPS pass (helper functions for ABC9).

5.23.3. Executing SCC pass (detecting logic loops).
Found 0 SCCs in module pong_pt1_wrapper.
Found 0 SCCs.

5.23.4. Executing ABC9_OPS pass (helper functions for ABC9).

5.23.5. Executing PROC pass (convert processes to netlists).

5.23.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

5.23.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

5.23.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

5.23.5.4. Executing PROC_INIT pass (extract init attributes).

5.23.5.5. Executing PROC_ARST pass (detect async resets in processes).

5.23.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

5.23.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

5.23.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).

5.23.5.9. Executing PROC_DFF pass (convert process syncs to FFs).

5.23.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

5.23.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

5.23.5.12. Executing OPT_EXPR pass (perform const folding).

5.23.6. Executing TECHMAP pass (map to technology primitives).

5.23.6.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

5.23.6.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~251 debug messages>

5.23.7. Executing OPT pass (performing simple optimizations).

5.23.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module DFFCE.
Optimizing module DFFPE.
Optimizing module DFFC.

5.23.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\DFFCE'.
Finding identical cells in module `\DFFPE'.
Finding identical cells in module `\DFFC'.
Removed a total of 0 cells.

5.23.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \DFFCE..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \DFFPE..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \DFFC..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

5.23.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \DFFCE.
  Optimizing cells in module \DFFPE.
  Optimizing cells in module \DFFC.
Performed a total of 0 changes.

5.23.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\DFFCE'.
Finding identical cells in module `\DFFPE'.
Finding identical cells in module `\DFFC'.
Removed a total of 0 cells.

5.23.7.6. Executing OPT_DFF pass (perform DFF optimizations).

5.23.7.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \DFFCE..
Finding unused cells or wires in module \DFFPE..
Finding unused cells or wires in module \DFFC..

5.23.7.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module DFFC.
Optimizing module DFFCE.
Optimizing module DFFPE.

5.23.7.9. Finished OPT passes. (There is nothing left to do.)

5.23.8. Executing TECHMAP pass (map to technology primitives).

5.23.8.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/abc9_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/abc9_map.v' to AST representation.
Successfully finished Verilog frontend.

5.23.8.2. Continuing TECHMAP pass.
Using template DFFCE for cells of type DFFCE.
Using template DFFC for cells of type DFFC.
Using template DFFPE for cells of type DFFPE.
No more expansions possible.
<suppressed ~54 debug messages>

5.23.9. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/abc9_model.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/abc9_model.v' to AST representation.
Replacing existing blackbox module `$__ABC9_DELAY' at /usr/local/bin/../share/yosys/abc9_model.v:2.1-7.10.
Generating RTLIL representation for module `$__ABC9_DELAY'.
Replacing existing blackbox module `$__ABC9_SCC_BREAKER' at /usr/local/bin/../share/yosys/abc9_model.v:9.1-11.10.
Generating RTLIL representation for module `$__ABC9_SCC_BREAKER'.
Replacing existing module `$__DFF_N__$abc9_flop' at /usr/local/bin/../share/yosys/abc9_model.v:14.1-20.10.
Generating RTLIL representation for module `$__DFF_N__$abc9_flop'.
Replacing existing module `$__DFF_P__$abc9_flop' at /usr/local/bin/../share/yosys/abc9_model.v:23.1-29.10.
Generating RTLIL representation for module `$__DFF_P__$abc9_flop'.
Successfully finished Verilog frontend.

5.23.10. Executing ABC9_OPS pass (helper functions for ABC9).
<suppressed ~43 debug messages>

5.23.11. Executing ABC9_OPS pass (helper functions for ABC9).

5.23.12. Executing ABC9_OPS pass (helper functions for ABC9).
<suppressed ~2 debug messages>

5.23.13. Executing TECHMAP pass (map to technology primitives).

5.23.13.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

5.23.13.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~253 debug messages>

5.23.14. Executing OPT pass (performing simple optimizations).

5.23.14.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pong_pt1_wrapper.

5.23.14.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pong_pt1_wrapper'.
Removed a total of 0 cells.

5.23.14.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pong_pt1_wrapper..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

5.23.14.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pong_pt1_wrapper.
Performed a total of 0 changes.

5.23.14.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pong_pt1_wrapper'.
Removed a total of 0 cells.

5.23.14.6. Executing OPT_DFF pass (perform DFF optimizations).

5.23.14.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pong_pt1_wrapper..

5.23.14.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pong_pt1_wrapper.

5.23.14.9. Finished OPT passes. (There is nothing left to do.)

5.23.15. Executing AIGMAP pass (map logic to AIG).

5.23.16. Executing AIGMAP pass (map logic to AIG).
Module pong_pt1_wrapper: replaced 381 cells with 2117 new cells, skipped 732 cells.
  replaced 4 cell types:
     182 $_OR_
     150 $_XOR_
       1 $_ORNOT_
      48 $_MUX_
  not replaced 15 cell types:
       2 $scopeinfo
     118 $_NOT_
     431 $_AND_
       1 DFFC
       2 DFFPE
       3 DFFRE
      16 DFFE
      46 DFFCE
      15 IBUF
       8 OBUF
       2 DFFPE_$abc9_byp
      22 $paramod$__ABC9_DELAY\DELAY=32'00000000000000000000000000111111
       1 DFFC_$abc9_byp
      19 $paramod$__ABC9_DELAY\DELAY=32'00000000000000000000001001000000
      46 DFFCE_$abc9_byp

5.23.16.1. Executing ABC9_OPS pass (helper functions for ABC9).

5.23.16.2. Executing ABC9_OPS pass (helper functions for ABC9).

5.23.16.3. Executing XAIGER backend.
<suppressed ~79 debug messages>
Extracted 1208 AND gates and 2933 wires from module `pong_pt1_wrapper' to a netlist network with 99 inputs and 110 outputs.

5.23.16.4. Executing ABC9_EXE pass (technology mapping using ABC9).

5.23.16.5. Executing ABC9.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_lut <abc-temp-dir>/input.lut 
ABC: + read_box <abc-temp-dir>/input.box 
ABC: + &read <abc-temp-dir>/input.xaig 
ABC: + &ps 
ABC: <abc-temp-dir>/input : i/o =     99/    110  and =    1013  lev =   25 (2.51)  mem = 0.02 MB  box = 90  bb = 90
ABC: Warning: AIG with boxes has internal fanout in 0 complex flops and 1 carries.
ABC: + &scorr 
ABC: Warning: The network is combinational.
ABC: + &sweep 
ABC: + &dc2 
ABC: + &dch -f 
ABC: + &ps 
ABC: <abc-temp-dir>/input : i/o =     99/    110  and =    1029  lev =   18 (2.21)  mem = 0.02 MB  ch =  133  box = 90  bb = 90
ABC: Warning: AIG with boxes has internal fanout in 0 complex flops and 1 carries.
ABC: + &if -W 500 -v 
ABC: K = 8. Memory (bytes): Truth =    0. Cut =   68. Obj =  152. Set =  708. CutMin = no
ABC: Node =    1029.  Ch =   125.  Total mem =    0.24 MB. Peak cut mem =    0.04 MB.
ABC: P:  Del = 11007.00.  Ar =    1368.0.  Edge =      963.  Cut =    15966.  T =     0.00 sec
ABC: P:  Del = 10540.00.  Ar =    1477.0.  Edge =      991.  Cut =    15912.  T =     0.00 sec
ABC: P:  Del = 10540.00.  Ar =     902.0.  Edge =      880.  Cut =    27759.  T =     0.00 sec
ABC: F:  Del = 10540.00.  Ar =     597.0.  Edge =      857.  Cut =    20379.  T =     0.00 sec
ABC: A:  Del = 10540.00.  Ar =     553.0.  Edge =      835.  Cut =    18660.  T =     0.01 sec
ABC: A:  Del = 10540.00.  Ar =     552.0.  Edge =      834.  Cut =    18114.  T =     0.01 sec
ABC: Total time =     0.03 sec
ABC: + &write -n <abc-temp-dir>/output.aig 
ABC: + &mfs 
ABC: + &ps -l 
ABC: <abc-temp-dir>/input : i/o =     99/    110  and =    1175  lev =   22 (2.13)  mem = 0.02 MB  box = 90  bb = 90
ABC: Mapping (K=8)  :  lut =    182  edge =     742  lev =    5 (0.80)  Boxes are not in a topological order. Switching to level computation without boxes.
ABC: levB =   22  mem = 0.01 MB
ABC: LUT = 182 : 2=29 15.9 %  3=34 18.7 %  4=66 36.3 %  5=23 12.6 %  6=15 8.2 %  7=7 3.8 %  8=8 4.4 %  Ave = 4.08
ABC: Warning: AIG with boxes has internal fanout in 0 complex flops and 1 carries.
ABC: + &write -n <abc-temp-dir>/output.aig 
ABC: + time 
ABC: elapse: 0.14 seconds, total: 0.14 seconds

5.23.16.6. Executing AIGER frontend.
<suppressed ~430 debug messages>
Removed 1842 unused cells and 2328 unused wires.

5.23.16.7. Executing ABC9_OPS pass (helper functions for ABC9).
ABC RESULTS:              $lut cells:      184
ABC RESULTS:   \DFFPE_$abc9_byp cells:        2
ABC RESULTS:   \DFFC_$abc9_byp cells:        1
ABC RESULTS:   \DFFCE_$abc9_byp cells:       46
ABC RESULTS:           input signals:       66
ABC RESULTS:          output signals:       61
Removing temp directory.

5.23.17. Executing TECHMAP pass (map to technology primitives).

5.23.17.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/abc9_unmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/abc9_unmap.v' to AST representation.
Generating RTLIL representation for module `\$__DFF_x__$abc9_flop'.
Generating RTLIL representation for module `\$__ABC9_SCC_BREAKER'.
Successfully finished Verilog frontend.

5.23.17.2. Continuing TECHMAP pass.
Using template DFFCE_$abc9_byp for cells of type DFFCE_$abc9_byp.
Using template DFFPE_$abc9_byp for cells of type DFFPE_$abc9_byp.
Using template DFFC_$abc9_byp for cells of type DFFC_$abc9_byp.
No more expansions possible.
<suppressed ~57 debug messages>
Removed 17 unused cells and 3763 unused wires.

5.24. Executing TECHMAP pass (map to technology primitives).

5.24.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/gowin/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/gowin/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

5.24.2. Continuing TECHMAP pass.
Using template $paramod$7bb6a37e65823eeb4b38c370fec30ab082759a14\$lut for cells of type $lut.
Using template $paramod$8e2232c450ab5216d48e8b6e37c3dea3bd7c9b66\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0010 for cells of type $lut.
Using template $paramod$b287726797d0722f64e731f1134f7c05af8f1578\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0001 for cells of type $lut.
Using template $paramod$ba57c096f7593668e5a33ed3b3dcfc79597355b2\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1000 for cells of type $lut.
Using template $paramod$571404c0889eaf57f492cb5e37f8acb5df5852f9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001000 for cells of type $lut.
Using template $paramod$a6a326cb872a1c77ec81e1772557d9255903f65f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod$4f32aeb0f34bfcaf9a20a9a4cf912254f20815fe\$lut for cells of type $lut.
Using template $paramod$b1c14eaa956ee1bb054700e34c7aa89a650615a7\$lut for cells of type $lut.
Using template $paramod$11d69dda06d3f9ecc0e11b3d0a11493978f21507\$lut for cells of type $lut.
Using template $paramod$658b9ed803f0d3d335616d3858b53e0a2522f1e8\$lut for cells of type $lut.
Using template $paramod$177ebd8a2d26f542a1ffed48ffa10a32d36df82d\$lut for cells of type $lut.
Using template $paramod$665c9fbfe579dcc09291ff3032b38d8a83a19dc8\$lut for cells of type $lut.
Using template $paramod$e40ac3801f1f1e7983efe3219ac05170d0169210\$lut for cells of type $lut.
Using template $paramod$8a4e572d0b2ee7a8df9e802ac8c84e0c17c5f683\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01101010 for cells of type $lut.
Using template $paramod$a65f06c67d12f967415ffb0e581fffa0ef526775\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000001 for cells of type $lut.
Using template $paramod$ff2e60b3455d24a49eeac8698dbb47aa814cdd54\$lut for cells of type $lut.
Using template $paramod$453f9d525ced301a4edda453239a5049a9b2981d\$lut for cells of type $lut.
Using template $paramod$153c6cdaaddbc43e6ef3facd06aa851de33910ae\$lut for cells of type $lut.
Using template $paramod$f0b0aaba3711434a2e284790359c6e1e434b3f0c\$lut for cells of type $lut.
Using template $paramod$1ebb4d02c551824354901bc37c819644f8b988b3\$lut for cells of type $lut.
Using template $paramod$13588fe350b2bd2d33cc16429ef238e9fc8e70a8\$lut for cells of type $lut.
Using template $paramod$f626b575273537b3090dbe5d04b27b283ec9a192\$lut for cells of type $lut.
Using template $paramod$fca001e3e0b52158a872e76e56c01ec10dfbb1de\$lut for cells of type $lut.
Using template $paramod$13aaa1c919c59761a782ac7f5306d283bc294394\$lut for cells of type $lut.
Using template $paramod$bd3bf709159bdc54ad609699f0a1d973b3608b4c\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0110 for cells of type $lut.
Using template $paramod$de90544516fe566e5029d36bb64ea0205beb1f2d\$lut for cells of type $lut.
Using template $paramod$1e7a9e755d1a9fb85f3c729bc89b588f45b55047\$lut for cells of type $lut.
Using template $paramod$090186a829991be5c45ba42ccd882046c21dba12\$lut for cells of type $lut.
Using template $paramod$d6f7638bcdd2a3ba8d48c9e0aa9c274f03ee2931\$lut for cells of type $lut.
Using template $paramod$4cdc626b949298d62bf5090d8527fd6339d32e1e\$lut for cells of type $lut.
Using template $paramod$91e31b7b2c0e42efa0729d6c1b31b7ef0ed66ecf\$lut for cells of type $lut.
Using template $paramod$7d35f3eb4056e6484203c99fe42cfcf1dfaba704\$lut for cells of type $lut.
Using template $paramod$cad45b6c9da81941161a13849773fe2ed4bc1c6f\$lut for cells of type $lut.
Using template $paramod$b9dbcb6f969a439f1f97e473bf1b8655304e417b\$lut for cells of type $lut.
Using template $paramod$f9249f866bbb9e63058e924bd530dcc8a9962e81\$lut for cells of type $lut.
Using template $paramod$47a8214374025465e226fa66bee690ff33268a25\$lut for cells of type $lut.
Using template $paramod$f096cbf7810c657d1faa5ebcdd247974deedeea6\$lut for cells of type $lut.
Using template $paramod$085aa9f4dca272a32d75869e6bb90bb84c7c7b34\$lut for cells of type $lut.
Using template $paramod$1cba003239989082588ce202b1c6d2d88dd39955\$lut for cells of type $lut.
Using template $paramod$0985a90293bb4ded53e6b9e4936e3a2355eb438b\$lut for cells of type $lut.
Using template $paramod$2382b3b891031a0a2d14eccc0495da1991859258\$lut for cells of type $lut.
Using template $paramod$2e77f03c7e51505965975c26b813514b47371908\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
Using template $paramod$f9813472aa48e533b3838c6f2316dc2e78c66111\$lut for cells of type $lut.
Using template $paramod$101238f3d8d49ab12a9b49a2f01cd503b26e9c61\$lut for cells of type $lut.
Using template $paramod$a5516fc31d1e552de2435200bb732b4d4ad63a9c\$lut for cells of type $lut.
Using template $paramod$6c51c1ba6c39f0c09b896d52432b366f116bd3c1\$lut for cells of type $lut.
Using template $paramod$d646cd5cb36fb1f9dd2b06f584b3b88b2dec1d24\$lut for cells of type $lut.
Using template $paramod$272652f6c6fbe9a75eff76e45cc7e2788835518b\$lut for cells of type $lut.
Using template $paramod$adce9c89515a4e83641fc3471eb3c01ec7b082ff\$lut for cells of type $lut.
Using template $paramod$837aa7c6757097b1babc2243b0e732e83de9fac4\$lut for cells of type $lut.
Using template $paramod$15942ac7be0dd725beac7480dcc74ee28533af66\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1001 for cells of type $lut.
Using template $paramod$3398ccf66089f7f5a3a3bb18cdf934fcb01c92bc\$lut for cells of type $lut.
Using template $paramod$3c3fa83b9b0d570948e6dfec7daad88e3a0d13bb\$lut for cells of type $lut.
Using template $paramod$26ed5715e3139bab8bec571f7b07f945cd5c3b88\$lut for cells of type $lut.
Using template $paramod$fc2eba6cdcf0dd1760ec72066a84909c83075e15\$lut for cells of type $lut.
Using template $paramod$b81aa6e7bf92400c2a243508922ba32adae49111\$lut for cells of type $lut.
Using template $paramod$b04f0510561c4bbb703d2e39c6eca682b920366b\$lut for cells of type $lut.
Using template $paramod$3d7168c8134c4765b84a7b86d5ef7e1e65bbf4a0\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10101000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11000101 for cells of type $lut.
Using template $paramod$dd834099fe1625eed94f4711b33dc7e4f428b19a\$lut for cells of type $lut.
Using template $paramod$2198d322c39cf8d604a6b68dc67d83863879f81f\$lut for cells of type $lut.
Using template $paramod$39cd8733c1cb3eddde2c7f68a282400acbcf8fb7\$lut for cells of type $lut.
Using template $paramod$2778e357981fbc1f9a29ed73c819ec3e63ce99ee\$lut for cells of type $lut.
Using template $paramod$b9d8b7e91a2c68da033af948ea0bd8bdebbaf6b2\$lut for cells of type $lut.
Using template $paramod$7c6235cce22f79dfdbe9ca74f3682dfe1147c510\$lut for cells of type $lut.
Using template $paramod$c99909b0661e592bb9701b15671a24d993e3be48\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01100000 for cells of type $lut.
Using template $paramod$369d44c3fcd7327eb62e3ac3bdcb1e082f92f62a\$lut for cells of type $lut.
Using template $paramod$2af7fd5c408581c2b6e80048f54948ce05a232f8\$lut for cells of type $lut.
Using template $paramod$7d3cbfc289ec00e0691f33de08826f2254fca668\$lut for cells of type $lut.
Using template $paramod$c67ff654dfa9062d61db52bd013fb1271e5b9a9b\$lut for cells of type $lut.
Using template $paramod$6d6beead1425af15cf78b27fd9b11b41b5d4bce8\$lut for cells of type $lut.
Using template $paramod$fedc9dd49dc77948bb3b96048b3e9c4cb551096b\$lut for cells of type $lut.
Using template $paramod$766f851776a2d25e13728c9147ddfe7ff70917a3\$lut for cells of type $lut.
Using template $paramod$e51a8a571bee774247b38f52d6e85fd62ae52cea\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01011001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01010110 for cells of type $lut.
Using template $paramod$3cc9c3c3c44ae59dbe8692fba0e09f423ef2dcb8\$lut for cells of type $lut.
Using template $paramod$7bcf5f70986487920c848507d659d29b9546545c\$lut for cells of type $lut.
Using template $paramod$1ac3ebac6e8810d4c1ba7cf10ee98f4bb133ca70\$lut for cells of type $lut.
Using template $paramod$eafbcf8223decbf78094dfada9519377f9c11f37\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010101 for cells of type $lut.
Using template $paramod$d6ca727e39f31d51d29072e0f33aa09c65e37336\$lut for cells of type $lut.
Using template $paramod$7c62394fc9dcd57450f98f8754db0e3c7b377a8c\$lut for cells of type $lut.
Using template $paramod$bcbe38b900c9c8b6eeaf484b1a617ff9b20b1a5b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10101001 for cells of type $lut.
Using template $paramod$533388f0d669992f0df51b060162138be2e78f43\$lut for cells of type $lut.
Using template $paramod$f3c9f8c60dd2fcb9c82439e5e60a0303fef606b9\$lut for cells of type $lut.
Using template $paramod$e7b2fb9308c72f953ed9531fe7df1919f715b2c5\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10111111 for cells of type $lut.
Using template $paramod$97e5ca22b0a7af1da137c70ff3edad3d78753b27\$lut for cells of type $lut.
Using template $paramod$2093257280191a1ed11c67612ec17e8735762b18\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10010110 for cells of type $lut.
Using template $paramod$bf3c695b03cbb3727b63eb2bf69127329bf3a602\$lut for cells of type $lut.
Using template $paramod$43920eead97cfe6c48d10f084962e7b11714ac27\$lut for cells of type $lut.
Using template $paramod$f1caf46fe3b61bee19d35ce4422c1459f1952c33\$lut for cells of type $lut.
Using template $paramod$19bf537884f522ec4436ef9a91f5dafd4f15ad45\$lut for cells of type $lut.
Using template $paramod$e7ea51e7360126f0cef0e7ba58da7f2d9cbcbad4\$lut for cells of type $lut.
Using template $paramod$8923a3c6eb952ec24b60acc7d04c704e13d22721\$lut for cells of type $lut.
Using template $paramod$1d371fb9f6e4d1b0a5db1e4212eac65c4a243863\$lut for cells of type $lut.
Using template $paramod$19fa05fb4efd85caf5b25d89a8781e6dc233e90c\$lut for cells of type $lut.
Using template $paramod$ce15874c299a587dd16825ec2d2d2759b547554e\$lut for cells of type $lut.
Using template $paramod$01577ea7e45ab1fd249b05447c65c44bc65c48a0\$lut for cells of type $lut.
Using template $paramod$de7bf9d8af7953a245b55a778055cc6e4270ab78\$lut for cells of type $lut.
Using template $paramod$3c3fed19c6fd1d349196eeef2e653fb0a32b5a50\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01101001 for cells of type $lut.
Using template $paramod$8dea978432b975a06d487b3763d4d556f8d362b4\$lut for cells of type $lut.
Using template $paramod$0dc4a541759a7803287e026168c0a283564613a1\$lut for cells of type $lut.
Using template $paramod$f243a36bb4296dae32e6c0a53177bfd51373e5f7\$lut for cells of type $lut.
Using template $paramod$f9df0a7785575c8d45c68311c0e97c35818aa8a0\$lut for cells of type $lut.
Using template $paramod$9664483609d9e726df9697364de1aad825ad3979\$lut for cells of type $lut.
Using template $paramod$9d129e7c75a7bf7bb05587474a99d45df15be4c7\$lut for cells of type $lut.
Using template $paramod$c359fe9ebaa6f0eab85cdd4b6031532bf01f0c0c\$lut for cells of type $lut.
Using template $paramod$944b914180d17cc893f551861889c802f5cc0b8a\$lut for cells of type $lut.
Using template $paramod$6e72002d213238024964ea1729a1ed9f8efe8a5b\$lut for cells of type $lut.
Using template $paramod$692927e279b3d5c42ee4aacb287247c0b34943ed\$lut for cells of type $lut.
Using template $paramod$0119f754096e0b396f32824a17b1769b8307c52d\$lut for cells of type $lut.
Using template $paramod$1b0bcb10af04082079fad7823ecdef99b9f06af0\$lut for cells of type $lut.
Using template $paramod$8c9f07c65d5dbc2638bf048db06973ef971c3b1b\$lut for cells of type $lut.
Using template $paramod$d640f7cf90ea7e706ea227d20aaf061cd9134f1a\$lut for cells of type $lut.
Using template $paramod$ac40f64cfa9662d5d068ee2917a64bddc1841541\$lut for cells of type $lut.
Using template $paramod$babd5ea92821eed0bdddfc168b62cdabe74dbc80\$lut for cells of type $lut.
Using template $paramod$a21c98f9d6e7f39d3952c9578f75d5cc0d3bb7d9\$lut for cells of type $lut.
Using template $paramod$1cc4ead1be7d20343e835592d0565bc12283c933\$lut for cells of type $lut.
Using template $paramod$5b319dac0e50eb9676d8bdb6ec4c43863f646d55\$lut for cells of type $lut.
Using template $paramod$27e8daf3583e7cdc144835b263da6ad7982b9e8c\$lut for cells of type $lut.
Using template $paramod$798f606011c1c1442dc7058f5433df9035b858f1\$lut for cells of type $lut.
Using template $paramod$835928a1e97be15ba2f6dfbf9ca782cc76824066\$lut for cells of type $lut.
Using template $paramod$ea0a4ee26eb9aa2c03283f4bfb761fc3543b5b69\$lut for cells of type $lut.
Using template $paramod$95897b2bdf0a324a055005d664d455061dfb74a9\$lut for cells of type $lut.
Using template $paramod$f94d06616c4502e22bd927b3fc28b2220e21c4e6\$lut for cells of type $lut.
Using template $paramod$c1cf1eea09b0b3fdd958aa2085219b409a94252e\$lut for cells of type $lut.
Using template $paramod$946119d3cef8fd86c67ea82378cb8edb7397d36c\$lut for cells of type $lut.
Using template $paramod$5e1189b756341a4e8f81e6b27b59c7f56a36ff03\$lut for cells of type $lut.
Using template $paramod$90f5edaf81c3be6c9372875f444de8d5019e934b\$lut for cells of type $lut.
Using template $paramod$6f6efad2409f713e8628b2ee9def742a1c9fad85\$lut for cells of type $lut.
Using template $paramod$40fee15a9b488d606dfb5a707f6421b4bfc3bc9b\$lut for cells of type $lut.
Using template $paramod$bc47072874ca9d88b81c309e1fc2222112c85db5\$lut for cells of type $lut.
Using template $paramod$ba6afd818daf34ab7c3bf8834589f412391efb2e\$lut for cells of type $lut.
Using template $paramod$bf0d0292861bdee659ef5cbc5e58b330ac5871f9\$lut for cells of type $lut.
Using template $paramod$d539d78fc8901cbacc1c8181f642d4c3b062e03f\$lut for cells of type $lut.
Using template $paramod$b6a6304103df93b0f517a7331af41ef76f50070c\$lut for cells of type $lut.
Using template $paramod$d8946d5d19a6696f86c2fab73bfb87ef76fcbd7b\$lut for cells of type $lut.
Using template $paramod$700ddf4c8ac9549cb6c8c5c386b2a6432c0ae77b\$lut for cells of type $lut.
Using template $paramod$d188fdca03ee54b965fa67ee0ab09dc2c8260a60\$lut for cells of type $lut.
Using template $paramod$606f48abbd89ac07d9030b00132dca4db14c4f44\$lut for cells of type $lut.
Using template $paramod$fe589db9db510d3ad3721c3286b4ccf9811aa2b5\$lut for cells of type $lut.
Using template $paramod$17fdea268d902e4d3f13a68d2132e806f2c2eade\$lut for cells of type $lut.
Using template $paramod$71b109c2d46e456c630e3afc2e3c6e203feba051\$lut for cells of type $lut.
Using template $paramod$107fa765597a3d385a35b2745d7db1446dacc415\$lut for cells of type $lut.
Using template $paramod$502fdf584cf6adf53e54ea17cf9b7cb0289c10a8\$lut for cells of type $lut.
Using template $paramod$7d7ef3b437cbde900523c8d90e4a1c4c22783610\$lut for cells of type $lut.
Using template $paramod$55ada99dfdb0ee005bb0c4936d6734eeb1d7dad8\$lut for cells of type $lut.
Using template $paramod$34e531dc93cdec6b88bf30bc052a85f014ce6b53\$lut for cells of type $lut.
Using template $paramod$2855d9845a717ed8b72d7dcb017b51e19004166a\$lut for cells of type $lut.
Using template $paramod$2fc917c435fb4f253569c191a28a6fe7cac39bd5\$lut for cells of type $lut.
Using template $paramod$70f958c3e26a2f4001cf0c7ee40d2876499dd290\$lut for cells of type $lut.
Using template $paramod$ed288732a1779d3e3c1b87c667ebf8c19aedb907\$lut for cells of type $lut.
Using template $paramod$5678519d338605171d582237d407b208c4bd214e\$lut for cells of type $lut.
Using template $paramod$aa22e94246b36e2cf01c175bbd947110b378bc83\$lut for cells of type $lut.
Using template $paramod$fb1e0091f7f1d5ef3e99d625207491952ef79655\$lut for cells of type $lut.
Using template $paramod$18f155731ab57a997aaa5e6d2f278ab5a135083e\$lut for cells of type $lut.
Using template $paramod$a795bd3f802b1756c29e62ccbfaca50c8ebef671\$lut for cells of type $lut.
Using template $paramod$5fc36aa1c594bcc7d52af7e140d7f16f9d46f44f\$lut for cells of type $lut.
Using template $paramod$3456697743fda3918c857ccb17c0e8ad0234625b\$lut for cells of type $lut.
Using template $paramod$3c13c67b19b17334155bd4f09cbc96a46948b1b1\$lut for cells of type $lut.
Using template $paramod$31d342f2f307dadc58e9b61b21ec7568feb723ba\$lut for cells of type $lut.
Using template $paramod$1e95c2c8ad817625d23b685d75521aa1a99f65ec\$lut for cells of type $lut.
Using template $paramod$4c1a0f026158d50392738f8b85f035bcd10dd972\$lut for cells of type $lut.
Using template $paramod$63168f34ad6f4f6af7db42f429fdbd2a7790cbe7\$lut for cells of type $lut.
Using template $paramod$214ba7c0360b22309208d5046bfdb31e9567f15b\$lut for cells of type $lut.
Using template $paramod$80e7749791a6360c112236edd2297d1471a82fa8\$lut for cells of type $lut.
Using template $paramod$a2b4ddfa3906001b2ef9f2414d79c3048f2a3a6e\$lut for cells of type $lut.
Using template $paramod$dfe054a8ecdcba50362b07315011ecab11b82868\$lut for cells of type $lut.
Using template $paramod$2e802325cb5859a45c20b3ef37a3835a2b03bdca\$lut for cells of type $lut.
Using template $paramod$924ad4e95b5789934d79fcabb8727c8da427a39e\$lut for cells of type $lut.
Using template $paramod$e5ae8c20d772727f79a92a9994e770cfc69258ba\$lut for cells of type $lut.
Using template $paramod$212547610198b6a3d8a5c3326d8839711d52e835\$lut for cells of type $lut.
Using template $paramod$7c458d3de3cd3d0350a3c69e4d48b692cceeeae9\$lut for cells of type $lut.
Using template $paramod$c8a96fd8d5afd0647fa2c2f385af6b0064ce62b1\$lut for cells of type $lut.
Using template $paramod$3a32a7587b9f95b908af04fb9b75cd3eae00b58e\$lut for cells of type $lut.
Using template $paramod$472165a0bba6197548fd35e972b1e2d41dbf5e69\$lut for cells of type $lut.
Using template $paramod$d96988fde1132d3972547a32d545442198d4c097\$lut for cells of type $lut.
Using template $paramod$6485d2abf5cf86932e5858f4efb71e17c5f3e097\$lut for cells of type $lut.
Using template $paramod$7125b224d5920c893c2dd3de98a266451c2ebe7d\$lut for cells of type $lut.
Using template $paramod$f2f11e29b7be0435cf4d36b20fe1330e3c6c14b5\$lut for cells of type $lut.
Using template $paramod$a220b406cf81875dbde8a55e68893b4eefb7faa1\$lut for cells of type $lut.
Using template $paramod$47c29f427fcf2105ca0ff6a6f09ea4efd0ce5e3f\$lut for cells of type $lut.
Using template $paramod$0450be9653772816b54434ff18f7bae7f22bc4de\$lut for cells of type $lut.
Using template $paramod$78bdbf30dba8851b4d6cdaf8e3eb5160e33bdff3\$lut for cells of type $lut.
Using template $paramod$ab5c2bb50d967af12c4bd45d585236bd97450da6\$lut for cells of type $lut.
Using template $paramod$374f1ae25464b4d04b64e1a5237dfacc737542f9\$lut for cells of type $lut.
Using template $paramod$a964f8ed466638f11766930007624f9261481a37\$lut for cells of type $lut.
Using template $paramod$596334d7208f6ab739c0fd9f36114b2d729ff09d\$lut for cells of type $lut.
Using template $paramod$756c22b81fc584dc5c358239f4c30329447df492\$lut for cells of type $lut.
Using template $paramod$4a1a515b37c4f650314f5e9042ce15cde120f162\$lut for cells of type $lut.
Using template $paramod$3c7a47a8f259199801c8205541e74afc45186e25\$lut for cells of type $lut.
Using template $paramod$8ed29749fc9e612424f889ab7686a48a21c69190\$lut for cells of type $lut.
Using template $paramod$52b18effd70d58034dd08f562152d4e12154db74\$lut for cells of type $lut.
Using template $paramod$77ad5b5a13077339c889d22d77e93cfd4da9d15f\$lut for cells of type $lut.
Using template $paramod$dfbefcd9fc596074b9a4f19cdb98bdeb96ab745f\$lut for cells of type $lut.
Using template $paramod$6e898a765028d5c24aa50a1e6b415408c039f596\$lut for cells of type $lut.
Using template $paramod$e1ce6045300e5f460399c8261d4bc45d7c3736f7\$lut for cells of type $lut.
Using template $paramod$337fde9a75291ef3fc90c72c60cf60297fcef4fc\$lut for cells of type $lut.
Using template $paramod$27befb1d9b51cc3cc0fe16aa44a9eb1bf1bfd782\$lut for cells of type $lut.
Using template $paramod$168e821d3dfc8199598c90fda6715dda676bdc9a\$lut for cells of type $lut.
Using template $paramod$0a756a904a4c0945e831f7c4c4e06538fa28dd1e\$lut for cells of type $lut.
Using template $paramod$75444ac3f273eb89da848d7caaa7f400b3263a32\$lut for cells of type $lut.
Using template $paramod$1cafe20f94c28ffc06a39a009243e447c935b257\$lut for cells of type $lut.
Using template $paramod$8cba32a4480047df765cd0afc1a7a7f42429f0f4\$lut for cells of type $lut.
Using template $paramod$f43d37a372a856788af549616c6d2c2a537f6b87\$lut for cells of type $lut.
Using template $paramod$8ae07d340e7254f8b5b21acd00ff753354bb1fd1\$lut for cells of type $lut.
Using template $paramod$9448d19ab51b71f74182dd67166a34468b501d93\$lut for cells of type $lut.
Using template $paramod$a3dde785b09ea96d6c3fa04424622bf86b8d6c13\$lut for cells of type $lut.
Using template $paramod$4dec28f0ccc655e9c81f1e3077b3dd1487ae3a45\$lut for cells of type $lut.
Using template $paramod$7f3617f4b24dd2e899782b88617aab9578e70e0f\$lut for cells of type $lut.
Using template $paramod$fe2ccc9771c7f3621af3392ea69c0322e13310d4\$lut for cells of type $lut.
Using template $paramod$e9c6a40a44b751eec431ded5267eff622db94d49\$lut for cells of type $lut.
Using template $paramod$6fd3d9708773d2ca64875469ef7e5732ef8a98b6\$lut for cells of type $lut.
Using template $paramod$ba9ffe2cb25340fe499a52b45db24cf6339493af\$lut for cells of type $lut.
Using template $paramod$4c2f0a89f8ce38fa946329095afbe0062eaaf6ba\$lut for cells of type $lut.
Using template $paramod$6760ab5346ea51bd3ca9899ba6a64eed8fc92975\$lut for cells of type $lut.
Using template $paramod$cc60b007639fe3364243d4becdb7b1f77c042df0\$lut for cells of type $lut.
Using template $paramod$e1b07d2d2905ae3ae782d970c5649e5732ff24c1\$lut for cells of type $lut.
Using template $paramod$673545139ab7df906f6bb85e0bf136f009fb66b6\$lut for cells of type $lut.
Using template $paramod$9a5247bb81be22a1a3201d2eb35e7cad43fb6fc8\$lut for cells of type $lut.
Using template $paramod$cbbab7834e3128c77dc281c46b40ea7b11795da8\$lut for cells of type $lut.
Using template $paramod$be93c4f35f3f75d5292567f218abb6df050f9db2\$lut for cells of type $lut.
Using template $paramod$f15e86f398e4ab2f7e908d4d8ab3617ede7e4421\$lut for cells of type $lut.
Using template $paramod$e13ed1c02425cb7a3bb3866ae86d967358309b52\$lut for cells of type $lut.
Using template $paramod$2dfa2a2159dc048fb39c2b9f49c7e07c6be8335e\$lut for cells of type $lut.
Using template $paramod$b9dcc593b5570d567388fcce08847ca6cf1af3b0\$lut for cells of type $lut.
Using template $paramod$c315fd171a22ad0b563d890e3adda172ea240769\$lut for cells of type $lut.
Using template $paramod$a479b2682241fd8c02d2ec4181bed57413b5281b\$lut for cells of type $lut.
Using template $paramod$49d70d2903f9bc766fa12e4d2524d87013c8bf3f\$lut for cells of type $lut.
Using template $paramod$61f245c12ab7052e4a5c764ecd9e4e164bd01452\$lut for cells of type $lut.
Using template $paramod$11296bcc8e8380186236797042b41e237f477d95\$lut for cells of type $lut.
Using template $paramod$f2e8a546bffed9b762ca3bb74e7754275842aeff\$lut for cells of type $lut.
Using template $paramod$f3d7fc168d7daaf5d9186ddfb7a035c82c5fc66b\$lut for cells of type $lut.
Using template $paramod$e3471db11c1ccefad8b337f0b38e1a480f1738fe\$lut for cells of type $lut.
Using template $paramod$9194bd63886c4e40533385723e59e1ec363a4a92\$lut for cells of type $lut.
Using template $paramod$eda97f6e9dce9eb25487cc7dba5caa86fe3be6f5\$lut for cells of type $lut.
Using template $paramod$87e327207ac7231614b0faf0c8206570c914d3b5\$lut for cells of type $lut.
Using template $paramod$f2c0b7226b1a079e10fd4953f6092804a28953ab\$lut for cells of type $lut.
Using template $paramod$a86d99bf922fa0decfda8462f601fbea426684b1\$lut for cells of type $lut.
Using template $paramod$f1bdf5268949b7a35eadbfacdb53293543d36a3a\$lut for cells of type $lut.
Using template $paramod$54705351b5f282290e18b8f0f5a79b818b122870\$lut for cells of type $lut.
Using template $paramod$69073e8650bb563950e4f956a804a1f2e5943d10\$lut for cells of type $lut.
Using template $paramod$5c8df4629783e942a25571e68de9d37e35d0b7bd\$lut for cells of type $lut.
Using template $paramod$801c53f11d8c9d8fc6bd0a34a6668107d2d18b3a\$lut for cells of type $lut.
Using template $paramod$8c9c9a76d452b87a066163287cb6180e42eeea59\$lut for cells of type $lut.
Using template $paramod$c12938dcc9990b445d1711870b4dffa45738bed6\$lut for cells of type $lut.
Using template $paramod$f0a5f84e99de44318dc82d5eeeae7eef713ca8d2\$lut for cells of type $lut.
Using template $paramod$2eecbf6a509b4aba01633521340409f9b3a4ed57\$lut for cells of type $lut.
Using template $paramod$5adc0744972d412a87bad377fc9b6173013074e5\$lut for cells of type $lut.
Using template $paramod$92700b029e5c61b2931ca541517099a0f4331eed\$lut for cells of type $lut.
Using template $paramod$3751824aa15d879b13738f8fa603251a85c52773\$lut for cells of type $lut.
Using template $paramod$bb17b341d8e8a8ca831b43294c9a534232c60362\$lut for cells of type $lut.
Using template $paramod$afb8c01ac64b0c42a22d37dec3207c247d77731b\$lut for cells of type $lut.
Using template $paramod$4cb144bf3d7ad175ac816a1de9bb223c3af1ca8c\$lut for cells of type $lut.
Using template $paramod$2b035d80f8da5c79477e458830d5b787d3ec97aa\$lut for cells of type $lut.
Using template $paramod$0c949f0b21505b26ede461a980f7ef1af5da06fa\$lut for cells of type $lut.
Using template $paramod$8d60e8ebe66fc101a9d950e1573e23d3bdaaa0da\$lut for cells of type $lut.
Using template $paramod$9711529d344c3d8ef0391c2e05eb31ca25ca5148\$lut for cells of type $lut.
Using template $paramod$860039f81a596ca7cbd6d1912e0812ed9449a1e4\$lut for cells of type $lut.
Using template $paramod$eec26de285ef5cdacc40eed2c6cfe719ab738583\$lut for cells of type $lut.
Using template $paramod$5c8e5f27fe682112e1ab372a6ebd4bad54e4d912\$lut for cells of type $lut.
Using template $paramod$59759d0dbc93319ab5d1ee81f1735dceffb17776\$lut for cells of type $lut.
Using template $paramod$61bc98ece8c76bffd4acdf40e5f231340cba90fc\$lut for cells of type $lut.
Using template $paramod$cea83e38940e3fa2b0ee5f60a81e56081bc41b62\$lut for cells of type $lut.
Using template $paramod$a95aeb58822b83840ad0d33221e28b316b409b83\$lut for cells of type $lut.
Using template $paramod$82a48e5f5771a531ca9edba4cc6af5165f5035d5\$lut for cells of type $lut.
Using template $paramod$b4913266127c37eb859c050b96d21d6aacff92e8\$lut for cells of type $lut.
Using template $paramod$d1f00954996213f851210819611ddfcef51210bd\$lut for cells of type $lut.
Using template $paramod$287ac774336565e4af87ceaf9c5cfa19d295a575\$lut for cells of type $lut.
Using template $paramod$55aa72f2f8cd018daada4170ebe17fb697b8126c\$lut for cells of type $lut.
Using template $paramod$283dacf62be4a1a40a492a47bac89b9e363cdbbe\$lut for cells of type $lut.
Using template $paramod$14d89ec291541652a483bf89bb348b130d8456b3\$lut for cells of type $lut.
Using template $paramod$f496e09a25538d8660d9f6de12e8c7d1120b34d3\$lut for cells of type $lut.
Using template $paramod$2d14d293b8459fbe9ff8b9a2add61dac8db1f310\$lut for cells of type $lut.
Using template $paramod$db07e6e502fb521aaaff60694f5734e23f5f7603\$lut for cells of type $lut.
Using template $paramod$9667245d1f535660e3c0605fafd8e99335576377\$lut for cells of type $lut.
Using template $paramod$8b9634e7dfa008c33d9ee399743b05f598f2abc6\$lut for cells of type $lut.
Using template $paramod$b11e5f9942166471434c80041df6102f7f667adf\$lut for cells of type $lut.
Using template $paramod$6e9b985b5981b90ca10a4fd305193adf408dc650\$lut for cells of type $lut.
Using template $paramod$0983c26432ee5f338d2a1d71ff3fc97bb478890c\$lut for cells of type $lut.
Using template $paramod$8443f8fde9d0b83ae124bd09c69f216351942144\$lut for cells of type $lut.
Using template $paramod$8d5cd53166b1c623f0157cd465aa60c893c68942\$lut for cells of type $lut.
Using template $paramod$e3453e2e938a9dda27d21a539ee0d03af5c784f2\$lut for cells of type $lut.
Using template $paramod$7874b46f68ed3ef4d50bde11f2ebc1aef65c3c50\$lut for cells of type $lut.
Using template $paramod$2acc56796dae1e7bbd8d34441a24f749523f3d30\$lut for cells of type $lut.
Using template $paramod$2e80234eb65b58947256d53f7d1fe8f0fdcd6c6b\$lut for cells of type $lut.
Using template $paramod$d8fa270f64ca5c2e2296dc4f613aedb5b3fe2ca0\$lut for cells of type $lut.
Using template $paramod$f085e9a0633b78a5d695ae2507cefa3354306bcf\$lut for cells of type $lut.
Using template $paramod$4ed12ab9d8f3826f0b1ec5e3d1a0eb508515f30f\$lut for cells of type $lut.
Using template $paramod$72e43de763256d9834239ffecb4f26075341ac09\$lut for cells of type $lut.
Using template $paramod$ccb9bfa2f1e105692c4b495d8270d78bb38c5ea1\$lut for cells of type $lut.
Using template $paramod$ace201f33bd2bd01787a4be3a7f07491ef80a146\$lut for cells of type $lut.
Using template $paramod$dadff75c617cf87bb5b8cfe47ca6c69fb6925370\$lut for cells of type $lut.
Using template $paramod$21059bb7e70238b8aa8e4aef5b51125f1503320a\$lut for cells of type $lut.
Using template $paramod$8c4c19c25050dbe2bb3db865e34fc06ea7f64b80\$lut for cells of type $lut.
Using template $paramod$23d357d622456f5c071c3b59e1a3ca4a7f06d6dc\$lut for cells of type $lut.
Using template $paramod$05347eae94835da152acbe9b76f97923599ef122\$lut for cells of type $lut.
Using template $paramod$963e209f608dbff832c931425953c36512b566ce\$lut for cells of type $lut.
Using template $paramod$844dbc774345a62df1d30543430d71f895084b80\$lut for cells of type $lut.
Using template $paramod$3dd8b9af6243c6587d8a1abfc659e52f36de89f9\$lut for cells of type $lut.
Using template $paramod$7f9797394785008dcf269ebb79a6682cb444927d\$lut for cells of type $lut.
Using template $paramod$aca10ebd908e25fcded3cf8262aab2e6ec7f0793\$lut for cells of type $lut.
Using template $paramod$a8cb9dc6eccb911035b7155b3fa8bdcdb987b386\$lut for cells of type $lut.
Using template $paramod$5b1cd6275c4631e0d253e41bbaddad085871c94b\$lut for cells of type $lut.
Using template $paramod$28ae25e5ad621706972b54de705832285b8d78c7\$lut for cells of type $lut.
Using template $paramod$56bfb9c7bc4e9d036b2c8ade273bc395ad3f1805\$lut for cells of type $lut.
Using template $paramod$1463ab8ab2b982643a28a25f667d94d9ea020d04\$lut for cells of type $lut.
Using template $paramod$e0b192dcf742212c7befd720b774997b20cd9310\$lut for cells of type $lut.
Using template $paramod$7a44d7a29e658f79fded008243c8ec59cc1f7cff\$lut for cells of type $lut.
Using template $paramod$4524bab5c88f273f135daac5cecae6f8791c3e5f\$lut for cells of type $lut.
Using template $paramod$59934781e294ca20339a7395114a08fcbb536a25\$lut for cells of type $lut.
Using template $paramod$d40e6f4cf7364ea2f29e250036b4e773f2ee42c8\$lut for cells of type $lut.
Using template $paramod$27af436a4436bbefc8f1ed9df1277823fdcafb1c\$lut for cells of type $lut.
Using template $paramod$07e5d497d62dc40037988724b0f17289981994c0\$lut for cells of type $lut.
Using template $paramod$cba70b6e653a9200d4db4a28a637d318ceb4e4f3\$lut for cells of type $lut.
Using template $paramod$ef7f1e65df746b0baa248bc34b422614333608b7\$lut for cells of type $lut.
Using template $paramod$5a1b08e2048a54f8e39926733b8139aa7142ca8b\$lut for cells of type $lut.
Using template $paramod$6dfbf2b16544eed6d57b22f5b0b28575863de8fd\$lut for cells of type $lut.
Using template $paramod$c66fe5631ce08ff44476a5bb8be272e1ccc9d581\$lut for cells of type $lut.
Using template $paramod$9615c352f8e533e1bf75e796e78cdf11d62643f0\$lut for cells of type $lut.
Using template $paramod$1d5b790e8c1f3db6b9e24d80d75a74b8729d3031\$lut for cells of type $lut.
Using template $paramod$74c25d1990c8438d816248653039dbed81564abc\$lut for cells of type $lut.
Using template $paramod$eacec56d9f8a17dd8bd05ab410777702ff3be351\$lut for cells of type $lut.
Using template $paramod$b3aa1703592923ee07c7dc9f6eb7339c1cca0095\$lut for cells of type $lut.
Using template $paramod$c65da49a346243c373e12724442fd90b50221e1e\$lut for cells of type $lut.
Using template $paramod$64682d7d0ec44adc79b99761326dd5363032c82c\$lut for cells of type $lut.
Using template $paramod$147d20e2b6a191d448786baa6e5f007b7f0aa497\$lut for cells of type $lut.
Using template $paramod$38afc8fa2ed8c5c27ef05566f384dc9c14e9135d\$lut for cells of type $lut.
Using template $paramod$086a3d8a982b252d3958df1d44f1f823669d806c\$lut for cells of type $lut.
Using template $paramod$a6486c959d4248a95ea4a68b28e721d2c1eb7c23\$lut for cells of type $lut.
Using template $paramod$7ddb897efefd82afe6d7da77b6a1d24ff2b06ab5\$lut for cells of type $lut.
No more expansions possible.
<suppressed ~5309 debug messages>

5.25. Executing OPT_LUT_INS pass (discard unused LUT inputs).
Optimizing LUTs in pong_pt1_wrapper.
  Optimizing lut $abc$9527$lut$aiger9526$1032.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$9527$lut$aiger9526$1032.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$9527$lut$aiger9526$955.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1338.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1338.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1268.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$9527$lut$aiger9526$955.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$955.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$955.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$9527$lut$aiger9526$917.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1302.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$9527$lut$aiger9526$941.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1077.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1061.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$9527$lut$aiger9526$1350.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$917.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$9527$lut$aiger9526$1032.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$9527$lut$aiger9526$917.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1077.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1268.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$917.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1268.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1268.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$9527$lut$aiger9526$1326.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9527$lut$flatten\u_pong_pt1.\pg.$2\x_ball_next[8:0][6].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9527$lut$flatten\u_pong_pt1.\pg.$2\x_ball_next[8:0][6].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$955.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1032.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$9527$lut$aiger9526$941.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1350.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$917.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1048.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$9527$lut$aiger9526$955.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1048.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1032.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$9527$lut$aiger9526$917.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$917.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$955.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$917.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$941.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$9527$lut$aiger9526$1077.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1350.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1032.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$9527$lut$aiger9526$1032.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1350.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1268.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1268.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1338.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1255.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1350.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1286.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$9527$lut$aiger9526$1142.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$955.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$flatten\u_pong_pt1.\pg.$2\x_ball_next[8:0][6].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$flatten\u_pong_pt1.\pg.$2\x_ball_next[8:0][6].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1184.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1338.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$9527$lut$aiger9526$1350.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1302.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$9527$lut$aiger9526$1302.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$9527$lut$aiger9526$917.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1286.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$9527$lut$aiger9526$1077.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1032.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$9527$lut$aiger9526$1268.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1268.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$9527$lut$aiger9526$1268.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1255.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1142.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1174.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$941.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1032.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$9527$lut$aiger9526$917.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1061.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1061.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1077.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$927.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1268.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9527$lut$flatten\u_pong_pt1.\pg.$2\x_ball_next[8:0][6].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1077.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1032.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$9527$lut$aiger9526$1032.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1550:reintegrate$9545.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$9527$lut$aiger9526$1048.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$9527$lut$aiger9526$1077.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1350.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1268.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$917.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1077.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$917.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$955.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$955.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$475.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$9527$lut$flatten\u_pong_pt1.\pg.$2\y_pad_next[7:0][7].genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$9527$lut$aiger9526$1350.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1048.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$9527$lut$aiger9526$1302.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$955.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1077.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$955.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1061.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$9527$lut$aiger9526$1061.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1174.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$955.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1077.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$flatten\u_pong_pt1.\pg.$2\x_ball_next[8:0][6].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$901.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$9527$lut$aiger9526$901.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$9527$lut$aiger9526$1048.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$9527$lut$aiger9526$1302.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9527$lut$flatten\u_pong_pt1.$procmux$693_Y[6].genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$flatten\u_pong_pt1.\pg.$2\x_ball_next[8:0][7].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$9527$lut$aiger9526$1286.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$9527$lut$aiger9526$1350.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$962.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9527$lut$flatten\u_pong_pt1.$procmux$700_Y[7].genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$243.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$flatten\u_pong_pt1.$procmux$700_Y[3].genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1338.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$9527$lut$aiger9526$475.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $auto$abc9_ops.cc:1550:reintegrate$9545.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$9527$lut$aiger9526$1032.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$9527$lut$aiger9526$1032.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$9527$lut$aiger9526$1184.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1102.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$9527$lut$aiger9526$1157.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1350.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1338.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$9527$lut$aiger9526$927.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$917.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$917.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1302.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$9527$lut$aiger9526$1065.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$955.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1142.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1268.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1350.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1102.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$9527$lut$aiger9526$1142.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$941.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1174.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$9527$lut$aiger9526$1268.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1157.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1268.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1200.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$9527$lut$aiger9526$1077.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$917.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1077.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1338.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1350.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1350.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$243.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1268.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$901.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$9527$lut$flatten\u_pong_pt1.\pg.$2\x_ball_next[8:0][6].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$9527$lut$aiger9526$955.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$394.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$9527$lut$aiger9526$1048.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$941.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$flatten\u_pong_pt1.\pg.$2\x_ball_next[8:0][7].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1077.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$941.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$941.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$941.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1350.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$378.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$flatten\u_pong_pt1.\pg.$2\x_ball_next[8:0][5].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$971.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9527$lut$auto$opt_dff.cc:219:make_patterns_logic$921.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$9527$lut$flatten\u_pong_pt1.\pg.$2\x_ball_next[8:0][5].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$9527$lut$flatten\u_pong_pt1.\pg.$2\x_ball_next[8:0][3].genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$967.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$9527$lut$flatten\u_pong_pt1.\pg.$2\x_ball_next[8:0][5].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$aiger9526$1032.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$9527$lut$flatten\u_pong_pt1.\pg.$2\x_ball_next[8:0][7].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$9527$lut$flatten\u_pong_pt1.$procmux$693_Y[3].genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $auto$abc9_ops.cc:1550:reintegrate$9545.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$9527$lut$aiger9526$1077.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)

5.26. Executing SETUNDEF pass (replace undef values with defined constants).

5.27. Executing HILOMAP pass (mapping to constant drivers).

5.28. Executing SPLITNETS pass (splitting up multi-bit signals).
Removed 0 unused cells and 3579 unused wires.

5.29. Executing AUTONAME pass.
Renamed 10140 objects in module pong_pt1_wrapper (55 iterations).
<suppressed ~1475 debug messages>

5.30. Executing HIERARCHY pass (managing design hierarchy).

5.30.1. Analyzing design hierarchy..
Top module:  \pong_pt1_wrapper

5.30.2. Analyzing design hierarchy..
Top module:  \pong_pt1_wrapper
Removed 0 unused modules.

5.31. Printing statistics.

=== pong_pt1_wrapper ===

   Number of wires:                875
   Number of wire bits:            875
   Number of public wires:         875
   Number of public wire bits:     875
   Number of ports:                 23
   Number of port bits:             23
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                753
     $scopeinfo                      2
     DFFC                            1
     DFFCE                          46
     DFFE                           16
     DFFPE                           2
     DFFRE                           3
     GND                             1
     IBUF                           15
     LUT1                          140
     LUT2                           40
     LUT3                           63
     LUT4                          178
     MUX2_LUT5                     145
     MUX2_LUT6                      61
     MUX2_LUT7                      23
     MUX2_LUT8                       8
     OBUF                            8
     VCC                             1

5.32. Executing CHECK pass (checking for obvious problems).
Checking module pong_pt1_wrapper...
Found and reported 0 problems.

5.33. Executing Verilog backend.

5.33.1. Executing BMUXMAP pass.

5.33.2. Executing DEMUXMAP pass.
Dumping module `\pong_pt1_wrapper'.

6. Printing statistics.

=== pong_pt1_wrapper ===

   Number of wires:                875
   Number of wire bits:            875
   Number of public wires:         875
   Number of public wire bits:     875
   Number of ports:                 23
   Number of port bits:             23
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                753
     $scopeinfo                      2
     DFFC                            1
     DFFCE                          46
     DFFE                           16
     DFFPE                           2
     DFFRE                           3
     GND                             1
     IBUF                           15
     LUT1                          140
     LUT2                           40
     LUT3                           63
     LUT4                          178
     MUX2_LUT5                     145
     MUX2_LUT6                      61
     MUX2_LUT7                      23
     MUX2_LUT8                       8
     OBUF                            8
     VCC                             1

Warnings: 2 unique messages, 2 total
End of script. Logfile hash: cf454a1148, CPU: user 1.23s system 0.09s, MEM: 78.62 MB peak
Yosys 0.42+15 (git sha1 74a1dd99a, clang++ 10.0.0-4ubuntu1 -fPIC -Os)
Time spent: 26% 8x techmap (0 sec), 11% 1x abc9_exe (0 sec), ...
